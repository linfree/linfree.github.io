<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>静思地</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.fbi.st/"/>
  <updated>2018-10-23T16:45:35.175Z</updated>
  <id>http://blog.fbi.st/</id>
  
  <author>
    <name>Lin Free</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2018_应该静下来</title>
    <link href="http://blog.fbi.st/2018/02/27/2018-%E5%BA%94%E8%AF%A5%E9%9D%99%E4%B8%8B%E6%9D%A5/"/>
    <id>http://blog.fbi.st/2018/02/27/2018-应该静下来/</id>
    <published>2018-02-27T14:32:35.000Z</published>
    <updated>2018-10-23T16:45:35.175Z</updated>
    
    <content type="html"><![CDATA[<p>写下这个日志标题的时候还是三月份。开始写内容的时候已经是6月了。  </p>
<p>现在还清楚的记得那个时候的心情：早期的项目由于当时能力问题和当时认知的限制，留下了很多bug，客户提出来需要升级。我在其中感受到了一些不满意。晚上下班后的我心情有些低落。思来想去，决定痛改这个项目，并暗自告诉自己。以后再也不写烂代码了。同时也告诉自己，这一年应该静下心来，好好的审视自己，好好的充实自己。</p>
<a id="more"></a>
<p>不知不觉过了三个月，当时的感受还在，但心情又有所不同。这三个月里，我扔掉了之前的“烂代码”，重构了该项目。这三个月，每次写代码都会想起自己当时心里立下的那个flag：以后再也不写烂代码了。当然，我很清楚，我肯定又写了很多以后的我眼中的“烂代码”。但这个时候，却是有所不同。</p>
<p>我知道，未来的我会否定我现在的这些“烂代码”，但一定不会否定我现在认真的态度。这段时间，我抱着一个敬畏的心态去写下我每行代码。也抱着敬畏的心情去过好生活。突然发现，自己好像静下来了。</p>
<p>再说说，2018。过了今年，会完成大家口中的人生几件大事。父母渐渐变老。家里的事情也要慢慢抗在我身上了。</p>
<p>想起2008的“年少才轻狂”，好像年少轻狂的年纪已经过去了。奔向而立之年的我，应该静下来，看清自己的位置，看清自己的方向，静下来，抛弃轻浮，静下来稳步往前。</p>
<p>三个月前的立下的flag我会一留着，时刻告诉自己：别写烂代码，好好生活。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="https://music.163.com/outchain/player?type=2&id=517567264&auto=1&height=32"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;写下这个日志标题的时候还是三月份。开始写内容的时候已经是6月了。  &lt;/p&gt;
&lt;p&gt;现在还清楚的记得那个时候的心情：早期的项目由于当时能力问题和当时认知的限制，留下了很多bug，客户提出来需要升级。我在其中感受到了一些不满意。晚上下班后的我心情有些低落。思来想去，决定痛改这个项目，并暗自告诉自己。以后再也不写烂代码了。同时也告诉自己，这一年应该静下心来，好好的审视自己，好好的充实自己。&lt;/p&gt;
    
    </summary>
    
      <category term="live" scheme="http://blog.fbi.st/categories/live/"/>
    
    
      <category term="心情记录" scheme="http://blog.fbi.st/tags/%E5%BF%83%E6%83%85%E8%AE%B0%E5%BD%95/"/>
    
      <category term="生活" scheme="http://blog.fbi.st/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>《楚门的世界》，关于选择和自由</title>
    <link href="http://blog.fbi.st/2018/01/22/%E3%80%8A%E6%A5%9A%E9%97%A8%E7%9A%84%E4%B8%96%E7%95%8C%E3%80%8B%EF%BC%8C%E5%85%B3%E4%BA%8E%E9%80%89%E6%8B%A9%E5%92%8C%E8%87%AA%E7%94%B1/"/>
    <id>http://blog.fbi.st/2018/01/22/《楚门的世界》，关于选择和自由/</id>
    <published>2018-01-22T02:54:04.000Z</published>
    <updated>2018-04-08T13:51:36.575Z</updated>
    
    <content type="html"><![CDATA[<h2 id="电影相关"><a href="#电影相关" class="headerlink" title="电影相关"></a>电影相关</h2><h3 id="楚门的世界（The-Truman-Show）"><a href="#楚门的世界（The-Truman-Show）" class="headerlink" title="楚门的世界（The Truman Show）"></a>楚门的世界（The Truman Show）</h3><p><center><img src="https://i.loli.net/2018/04/08/5aca1c7d5b30d.jpg" alt="tumen.jpg"></center></p>
<h3 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h3><p>楚门是一个平凡得不能再平凡的人，除了一些有些稀奇的经历之外——初恋女友突然失踪、溺水身亡的父亲忽然似乎又出现在眼前，他和绝大多数30多岁的美国男人绝无异样。这令他倍感失落。他也曾试过离开自己生活了多年的地方，但总因种种理由而不能成行。<br>　　直到有一天，他忽然发觉自己似乎一直在被人跟踪，无论他走到哪里，干什么事情。这种感觉愈来愈强烈。楚门决定不惜一切代价逃离这个他生活了30多年的地方，去寻找他的初恋女友。</p>
<h3 id="关于金·凯瑞-Jim-Carrey"><a href="#关于金·凯瑞-Jim-Carrey" class="headerlink" title="关于金·凯瑞(Jim Carrey)"></a>关于金·凯瑞(Jim Carrey)</h3><p>在看这部电影之前，我看到的金凯瑞的作品都还是《变相怪杰》、神探飞机头之类的无厘头喜剧电影。<br>通过这部电影，重新认识了他。电影中塑造的“楚门”形象让人映像深刻。</p>
<a id="more"></a>
<h2 id="观影后感"><a href="#观影后感" class="headerlink" title="观影后感"></a>观影后感</h2><h3 id="关于电影"><a href="#关于电影" class="headerlink" title="关于电影"></a>关于电影</h3><p>站在电影拍摄年代看，这部电影的想法大胆，某种程度还“预言”了现在的直播行业。楚门算是直播界的鼻祖吧？<br>电影中很多重复的镜头和场景，但电影情节设计合理，所以在观看的时候注意力也一直比较集中，不会有疲劳。<br>关于电影中的人物：楚门。他积极乐观，从小到大的几十年的生活直播，鼓舞了电影中很多“电视机前的观众”。最后选择离开“楚门的世界”的勇敢，也鼓舞了很多我这个看电影的观众。  </p>
<h3 id="我的感受"><a href="#我的感受" class="headerlink" title="我的感受"></a>我的感受</h3><h4 id="我们世界，楚门的世界"><a href="#我们世界，楚门的世界" class="headerlink" title="我们世界，楚门的世界"></a>我们世界，楚门的世界</h4><p>看完电影的时候，我会有一个疑惑：我是不是也处在一“XX的世界”？转瞬又会笑自己想多了。<br>但再认真的思考一下又会发现事情并不简单（细思极恐）：我真的处在一个真实的世界里么？我们看楚门，会不会也有人正在看着我们？（想得有点多啊，哈哈）<br>电影中，我们看得到的是：楚门走出了他的世界。<br>生活中，我们看不到的是：我们走不出自己的世界。<br>虽然我们不会真的在一场直播中，但我们的确被困在了自己的世界中。很多时候，我们都会计较生活中的点滴得失。我们会恐惧去改变。身体虽然没有被禁锢，但灵魂却甘心在“楚门的世界”中安逸。  </p>
<h4 id="关于自由和选择"><a href="#关于自由和选择" class="headerlink" title="关于自由和选择"></a>关于自由和选择</h4><p>电影中，楚门走出了“直播世界”，获得了自由，看起来是如此。可是我认为楚门在出门之前就已经获得了自由。<br>我认为，自由的概念不是“无拘无束”，而是“有得选”，也就是有选择的权利。楚门在出门前的那一刻，他是有选择走出去还是留下的权利，所以在这一刻，他是自由的。他知道了真相后，无论是留在电影世界，还是走出去，这件事情上，他都已经获得了“自由”。<br>我对自由最直观感受到的是在第一次搭上梯子翻出去的那一刻，一瞬间，我好像获得了某种自由。因为我终于可以选择是选用百度还是google，我是选择优酷还是youtube。有点不可思议，但就是这么简单。<br>自由好像就是这样，在你有选择的那一刻，你就有自由。你可以选择去旅行还是宅家里，监狱里的囚徒不行。<br>这么想，好像是有点道理。</p>
<p>最后：</p>
<blockquote>
<ul>
<li>如果我再也见不到你，我会祝你早安、午安还有晚安。</li>
</ul>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;电影相关&quot;&gt;&lt;a href=&quot;#电影相关&quot; class=&quot;headerlink&quot; title=&quot;电影相关&quot;&gt;&lt;/a&gt;电影相关&lt;/h2&gt;&lt;h3 id=&quot;楚门的世界（The-Truman-Show）&quot;&gt;&lt;a href=&quot;#楚门的世界（The-Truman-Show）&quot; class=&quot;headerlink&quot; title=&quot;楚门的世界（The Truman Show）&quot;&gt;&lt;/a&gt;楚门的世界（The Truman Show）&lt;/h3&gt;&lt;p&gt;&lt;center&gt;&lt;img src=&quot;https://i.loli.net/2018/04/08/5aca1c7d5b30d.jpg&quot; alt=&quot;tumen.jpg&quot;&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h3 id=&quot;内容简介&quot;&gt;&lt;a href=&quot;#内容简介&quot; class=&quot;headerlink&quot; title=&quot;内容简介&quot;&gt;&lt;/a&gt;内容简介&lt;/h3&gt;&lt;p&gt;楚门是一个平凡得不能再平凡的人，除了一些有些稀奇的经历之外——初恋女友突然失踪、溺水身亡的父亲忽然似乎又出现在眼前，他和绝大多数30多岁的美国男人绝无异样。这令他倍感失落。他也曾试过离开自己生活了多年的地方，但总因种种理由而不能成行。&lt;br&gt;　　直到有一天，他忽然发觉自己似乎一直在被人跟踪，无论他走到哪里，干什么事情。这种感觉愈来愈强烈。楚门决定不惜一切代价逃离这个他生活了30多年的地方，去寻找他的初恋女友。&lt;/p&gt;
&lt;h3 id=&quot;关于金·凯瑞-Jim-Carrey&quot;&gt;&lt;a href=&quot;#关于金·凯瑞-Jim-Carrey&quot; class=&quot;headerlink&quot; title=&quot;关于金·凯瑞(Jim Carrey)&quot;&gt;&lt;/a&gt;关于金·凯瑞(Jim Carrey)&lt;/h3&gt;&lt;p&gt;在看这部电影之前，我看到的金凯瑞的作品都还是《变相怪杰》、神探飞机头之类的无厘头喜剧电影。&lt;br&gt;通过这部电影，重新认识了他。电影中塑造的“楚门”形象让人映像深刻。&lt;/p&gt;
    
    </summary>
    
      <category term="live" scheme="http://blog.fbi.st/categories/live/"/>
    
    
      <category term="电影" scheme="http://blog.fbi.st/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>看电影《十二怒汉》</title>
    <link href="http://blog.fbi.st/2017/12/28/%E7%9C%8B%E7%94%B5%E5%BD%B1%E3%80%8A%E5%8D%81%E4%BA%8C%E6%80%92%E6%B1%89%E3%80%8B/"/>
    <id>http://blog.fbi.st/2017/12/28/看电影《十二怒汉》/</id>
    <published>2017-12-28T09:36:53.000Z</published>
    <updated>2017-12-28T10:00:19.649Z</updated>
    
    <content type="html"><![CDATA[<h2 id="相关介绍"><a href="#相关介绍" class="headerlink" title="相关介绍"></a>相关介绍</h2><h3 id="十二怒汉-12-Angry-Men-1957"><a href="#十二怒汉-12-Angry-Men-1957" class="headerlink" title="十二怒汉 12 Angry Men (1957)"></a>十二怒汉 12 Angry Men (1957)</h3><p><img src="https://i.loli.net/2017/12/28/5a44c091705d6.png" alt="12nuhan.png"></p>
<h3 id="剧情简介"><a href="#剧情简介" class="headerlink" title="剧情简介"></a>剧情简介</h3><p>一个在贫民窟长大的18岁少年因为涉嫌杀害自己的父亲被告上法庭，证人言之凿凿，各方面的证据都对他极为不利。十二个不同职业的人组成了这个案件的陪审团，他们要在休息室达成一致的意见，裁定少年是否有罪，如果罪名成立，少年将会被判处死刑。  </p>
<p>十二个陪审团成员各有不同，除了8号陪审员（H enry Fonda 饰）之外，其他人对这个犯罪事实如此清晰的案子不屑一顾，还没有开始讨论就认定了少年有罪。8号陪审员提出了自己的“合理疑点”，耐心地说服其他的陪审员，在这个过程中，他们每个人不同的人生观也在冲突和较量……<br><a id="more"></a> </p>
<h2 id="观影有感"><a href="#观影有感" class="headerlink" title="观影有感"></a>观影有感</h2><h3 id="关于电影"><a href="#关于电影" class="headerlink" title="关于电影"></a>关于电影</h3><p>在看本片之前，我在网上看到过有人总结：“那些因为名字而被错过的电影”，我记得其中就有印度电影《三傻大闹宝莱坞》。我不记得其中是否有这部《十二怒汉》，但我知道我在很长一段时间内错过这部电影就是因为他的名字。“十二怒汉” 这个名字给我的第一感觉好像是类似“三百斯巴达勇士”一样，而我并不太喜欢这类型的电影。 </p>
<p>至于，后面拿起这部电影看的原因是是在逛b站的时候，看到介绍这部电影的一个视频。通过那段视频我简单的了解了这部电影。然后找了一个周末的晚上，仔细观赏了这部电影。  </p>
<p>由于拍摄年代比较久远，所以是黑白的。但这丝毫不影响导演和演员在黑白光影之间，讲述形象、深刻的故事。  </p>
<p>不谈剧情，整个电影的一个半小时剧情，除了开场和结束的几个镜头，整个故事其余镜头都是在一个带洗手间的会议室中完成的。故事讲述得丝丝入扣，导演的才华和演员的演技，在这单调到离谱的场景中展现的淋漓尽致。  </p>
<p>关于整部电影，有人说这是一部伟大的电影，我个人觉得，这部电影绝对对得住“伟大”两个字。非常推荐一看。  </p>
<h3 id="我的感受"><a href="#我的感受" class="headerlink" title="我的感受"></a>我的感受</h3><h4 id="关于决策"><a href="#关于决策" class="headerlink" title="关于决策"></a>关于决策</h4><p>整部电影，最让我印象深刻的地方是当所有人都在选择“赞同”的时候，8号陪审员站出来选择“不赞同”。心理学上，有我们很熟悉的一个现象，叫“从众效应”，在很多时候，我们更喜欢，更愿意，站在大多数的一方。买东西时，我们会选择销量好的，在舆论方面，我们跟愿意去关注大家都关注的事物。</p>
<p>8号评审员在“证据确凿”，除了自己外11个成员都投“赞成票”的情况下，勇敢的投出“反对票”，并阐述自己的观点。</p>
<p>我不禁想到自己在做决策时候，我是否有勇气去做出这样的“投票”。在遇到大多数人反对自己观点的时候，我是否能坚持自己的想法，能坚持的与他辩论。我知道，很多时候这个答案都是否定的，这值得我去反思。</p>
<h4 id="关于态度"><a href="#关于态度" class="headerlink" title="关于态度"></a>关于态度</h4><p>关于对待事情的态度，这个要从人物的关系说起。陪审团的成员都与他们所讨论的男孩在生活上是没有任何关系的。所以他们大多数人开始也并不太在乎他的生死。也不会在心里为男孩做辩解。这也是开始他对小男孩这件事情的一个态度。</p>
<p>轻视的态度决定了，11位评审员不会深入的去思考整件事情，更加不会站在为小男孩辩解的角度去思考，因为这跟‘我’无关。</p>
<p>当然，也正是因为他们对小男孩的态度是一种事不关己的态度，一种没有态度的态度，所以他们后面才能做到轻易的转换思路，为小男孩找到合理的解释。</p>
<p>对待事情的态度决定，我们对事情的思考方式，从何决定了我们的行为。所以表明态度，要谨慎。</p>
<h4 id="关于生命"><a href="#关于生命" class="headerlink" title="关于生命"></a>关于生命</h4><p>影片中，小男孩失去了父亲，也没有出现过他的母亲。除了8号评审员，片中出现的人物几乎没有人在意小男孩的生命。假如评审团中没有出现8号评审员，小男孩被判死刑，估计世界上也不会有人为他心痛，一个月后，一年以后，也不会有人记得世界上有小男孩这样一个人出现过。</p>
<p>包括，片中指认小男孩的老人，一生没有什么作为，到死去之前也不会有人注意到他。</p>
<p>这让我想到了电影《嫌疑人X的献身》中被数学家杀死的流浪汉，他的死去没有给世界带来丝毫的影响。</p>
<p>我还想到了很多死去的伟人，他们的逝去得到了整个世界的关注。他们的生命在这个星球上留下了不可磨灭的印记。</p>
<p>生命就是这样的神奇，可以灿烂如星空，也可以平淡如水滴。</p>
<h3 id="还有很多"><a href="#还有很多" class="headerlink" title="还有很多"></a>还有很多</h3><p>影片看完了，这篇简短的观后感也差不多结束了。由于文字水平有限，也可能是很多东西没有体悟透彻，所以漏掉了很多。影片和文字结束了，但生活还在继续，我相信，这部电影收获的更多的东西，是我现在在没有感受到的，没有讲述出来的，他会无形的影响着我今后的生活，生活会越来越好。</p>
<p>其他电影也是，其他书籍也是。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;相关介绍&quot;&gt;&lt;a href=&quot;#相关介绍&quot; class=&quot;headerlink&quot; title=&quot;相关介绍&quot;&gt;&lt;/a&gt;相关介绍&lt;/h2&gt;&lt;h3 id=&quot;十二怒汉-12-Angry-Men-1957&quot;&gt;&lt;a href=&quot;#十二怒汉-12-Angry-Men-1957&quot; class=&quot;headerlink&quot; title=&quot;十二怒汉 12 Angry Men (1957)&quot;&gt;&lt;/a&gt;十二怒汉 12 Angry Men (1957)&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/12/28/5a44c091705d6.png&quot; alt=&quot;12nuhan.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;剧情简介&quot;&gt;&lt;a href=&quot;#剧情简介&quot; class=&quot;headerlink&quot; title=&quot;剧情简介&quot;&gt;&lt;/a&gt;剧情简介&lt;/h3&gt;&lt;p&gt;一个在贫民窟长大的18岁少年因为涉嫌杀害自己的父亲被告上法庭，证人言之凿凿，各方面的证据都对他极为不利。十二个不同职业的人组成了这个案件的陪审团，他们要在休息室达成一致的意见，裁定少年是否有罪，如果罪名成立，少年将会被判处死刑。  &lt;/p&gt;
&lt;p&gt;十二个陪审团成员各有不同，除了8号陪审员（H enry Fonda 饰）之外，其他人对这个犯罪事实如此清晰的案子不屑一顾，还没有开始讨论就认定了少年有罪。8号陪审员提出了自己的“合理疑点”，耐心地说服其他的陪审员，在这个过程中，他们每个人不同的人生观也在冲突和较量……&lt;br&gt;
    
    </summary>
    
      <category term="live" scheme="http://blog.fbi.st/categories/live/"/>
    
    
      <category term="电影" scheme="http://blog.fbi.st/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>《如何阅读一本书》读书笔记</title>
    <link href="http://blog.fbi.st/2017/10/20/%E3%80%8A%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.fbi.st/2017/10/20/《如何阅读一本书》读书笔记/</id>
    <published>2017-10-20T12:13:31.000Z</published>
    <updated>2018-06-07T13:35:28.373Z</updated>
    
    <content type="html"><![CDATA[<p>《如何阅读一本书》</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>每本书的封面之下都有一套自己的骨架，作为一个分析阅读的读者，责任就是要找出这个骨架。  </p>
<p>一本书出现在面前时，肌肉包着骨头，衣服包裹着肌肉，可说是盛装而来。  </p>
<p>读者用不着揭开它的外衣或是撕去它的肌肉来得到在柔软表皮下的那套骨架，但是一定要用一双X光般的透视眼来看这本书，因为那是了解一本书、掌握其骨架的基础。  </p>
<p>《如何阅读一本书》初版于1940年，1972年大幅增订改写为新版。  </p>
<p>懂阅读的人，初探阅读的人，读这本书可以少走冤枉路。对阅读有所体会的人，读这本书可以有更深的印证和领悟。  </p>
<p>(来自豆瓣)</p>
<p><img src="https://i.loli.net/2017/09/08/59b2a3843d8fb.jpg" alt="如何阅读一本书.jpg"><br><a id="more"></a></p>
<h2 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h2><p>莫提默·J. 艾德勒（1902－2001）以学者、教育家、编辑人等多重面貌享有盛名。除了写作《如何阅读一本书》外，以主编《西方世界的经典人并担任1974年第十五版《大英百科全书》的编辑相异而闻名于世。  </p>
<p>查尔斯·范多伦（1926－）先曾任美国哥伦比亚大学教授。后因故离任，和艾德勒一起工作。一方面襄助艾德勒编辑《大英百科全书》，一方面将本书1940年初版内容大幅度增补改写。  </p>
<h2 id="读书有感"><a href="#读书有感" class="headerlink" title="读书有感"></a>读书有感</h2><h3 id="为什么从这本书开始？"><a href="#为什么从这本书开始？" class="headerlink" title="为什么从这本书开始？"></a>为什么从这本书开始？</h3><p>工欲善其事，必先利其器。所以读书之前，读一本优秀的教人读书的书，是非常有必要的。《如何阅读一本书》正是一本这样的好书。 </p>
<p>看完这本书后，相信许多人都会像我一样，懊悔自己没有在更早的时候接触到它。<br>认识自己的阅读方式，然后使用更科学和有效的方式去阅读。  </p>
<p>因为本人认为他是一本很好的书（当然，本书的优秀不需要我的肯定），同时他能让我们收获阅读的方法和对阅读的理解。看完这本书后，我真的希望有人能在更早的时候推荐我阅读这本书。所以我打算从这本书开始。  </p>
<h3 id="看本书前我是怎么阅读？"><a href="#看本书前我是怎么阅读？" class="headerlink" title="看本书前我是怎么阅读？"></a>看本书前我是怎么阅读？</h3><p>首先，在看本书之前，我应该已经算是一个书中说的“阅读的人”, 但同时我也是一个不太懂得阅读的人。   </p>
<p>我是个小说迷，看小说时整个人都很轻松，正因为这种轻松的感觉，让我很多时候都不能自拔；我很喜欢看一些科普读物，让我的视野更宽广；因为工作需求，我也会看很多技术的书籍充电；因为好奇心很大，所以经常还会翻阅各种各样的‘杂书’；  </p>
<p>但在阅读本书之前，我一直都没有自己的一个很合理的阅读方法，也不了解自己阅读行为的一些理论层的解释。例如：我经常以阅读小说的速度去阅读一些技术书籍，往往不得其解，随之放弃。也很多时候沉迷于简单的小说阅读的快感中，还认为从中收获很多。  </p>
<p>错误的阅读方式让我错过了去体会很多好书的精华，浪费了许多时间在一些不好的书上面。  </p>
<h3 id="我的收获是？"><a href="#我的收获是？" class="headerlink" title="我的收获是？"></a>我的收获是？</h3><p>这本书让我对阅读有了一个更加系统和科学的认识，也纠正了我一些不合适的阅读方式。 </p>
<p>我们阅读书籍的目的在于获得新的资讯，从而让让我们获得成长。毫无疑问，我在这本书中收获了这些。  </p>
<p>在看到本书开始大概三分之一的位置的时候，我有一种与本书相见恨晚的感觉，作者描述的阅读状态和方式，都很契合我的从前总结的阅读感受。随着更加往后的阅读，发现作者所讲的内容越来越难，我阅读的难度也在增加，这个时候，作者告诉我们：当你阅读越是困难，说明与作者的层次相差越大，阅读的收获也是越大。  </p>
<p>随着整本书读完，做完后面的阅读测试题，才感受到作者对阅读的理解至深，有一种再看一遍的冲动。<br>也有一种找本新书来应用本书收获的感觉。  </p>
<h3 id="这本书该怎么读？"><a href="#这本书该怎么读？" class="headerlink" title="这本书该怎么读？"></a>这本书该怎么读？</h3><p>这本书我是花了近一个月早上早起，每天挤出半个小时来看完的。阅读作者阅读的数量和阅读涉及的领域之广，让我深深的钦佩。也是正是因为作者的博学，所以如果没有一定的知识储备，在阅读本书的时候还是会遇到一些困难的，当遇到这些困难的时候，就要像作者所说的：坚持看下去。<br>这是一本偏向应用的书，所以我们在阅读的时候，更重要的还有要注重实践。在本书结尾的地方也留了一些阅读的测验。当然更多的还是需要在以后的更多的阅读活动中去实践。  </p>
<h3 id="用简短的话总结？"><a href="#用简短的话总结？" class="headerlink" title="用简短的话总结？"></a>用简短的话总结？</h3><p>本书从阅读的四个层次，循序深入的为我们解析了各个阅读阶段的技巧和注意事项。是一本指导阅读人阅读的很好的一本书。值得推荐。  </p>
<blockquote>
<p><strong> 阅读的人：</strong>   所谓‘阅读的人’，是指那些今天仍然习惯于从书写文字中汲取大量资讯，以增进对世界了解的人。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《如何阅读一本书》&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;每本书的封面之下都有一套自己的骨架，作为一个分析阅读的读者，责任就是要找出这个骨架。  &lt;/p&gt;
&lt;p&gt;一本书出现在面前时，肌肉包着骨头，衣服包裹着肌肉，可说是盛装而来。  &lt;/p&gt;
&lt;p&gt;读者用不着揭开它的外衣或是撕去它的肌肉来得到在柔软表皮下的那套骨架，但是一定要用一双X光般的透视眼来看这本书，因为那是了解一本书、掌握其骨架的基础。  &lt;/p&gt;
&lt;p&gt;《如何阅读一本书》初版于1940年，1972年大幅增订改写为新版。  &lt;/p&gt;
&lt;p&gt;懂阅读的人，初探阅读的人，读这本书可以少走冤枉路。对阅读有所体会的人，读这本书可以有更深的印证和领悟。  &lt;/p&gt;
&lt;p&gt;(来自豆瓣)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/09/08/59b2a3843d8fb.jpg&quot; alt=&quot;如何阅读一本书.jpg&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="read" scheme="http://blog.fbi.st/categories/read/"/>
    
    
      <category term="生活" scheme="http://blog.fbi.st/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="读书笔记" scheme="http://blog.fbi.st/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>用python分析了wh的药店</title>
    <link href="http://blog.fbi.st/2017/10/20/%E7%9C%8B%E5%AE%8C%E3%80%8A%E6%88%91%E4%B8%8D%E6%98%AF%E8%8D%AF%E7%A5%9E%E3%80%8B%E5%90%8E%E6%88%91%E7%94%A8python%E5%88%86%E6%9E%90%E4%BA%86%E4%B8%AD%E5%9B%BD%E7%9A%84%E8%8D%AF%E5%BA%97/"/>
    <id>http://blog.fbi.st/2017/10/20/看完《我不是药神》后我用python分析了中国的药店/</id>
    <published>2017-10-20T12:13:31.000Z</published>
    <updated>2018-10-23T15:52:31.175Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>其实打算分析药店这个事情，与看完《我不是药神》没啥关系，取这个标题，只是为了蹭一波电影的热度。<br>主要起因是，在世界杯期间看到一条段子：  </p>
<blockquote>
<p>美国500米就有一个篮球场，巴西每个小区一个足球场，而中国500米就有个大药房。  </p>
</blockquote>
<p>开始只是当成一个段子，觉得有夸张的嫌疑。但某天逛完超市回家，刻意的数了一下药店数量。  </p>
<p><strong> 震惊! 不到1km的路上居然有6，7个药店！真可怕。 </strong>   </p>
<p>正好我最近刚开始学习python数据分析，于是，就决心以“超一线城市大武汉”为例，好好看看中国的药店到底多不多。  </p>
<h2 id="数据获取"><a href="#数据获取" class="headerlink" title="数据获取"></a>数据获取</h2><h3 id="通过地图WebAPI"><a href="#通过地图WebAPI" class="headerlink" title="通过地图WebAPI"></a>通过地图WebAPI</h3><p>我尝试着找了一下，好像网上没有现成的数据。<br>只能自己动手，搞点数据了。  </p>
<p>首先想到的是通过百度地图来获取数据，找了找，果然有相关的WebAPI。  </p>
<blockquote>
<p>地点检索服务（又名Place API）是一类Web API接口服务；<br>服务提供多种场景的地点（POI）检索功能，包括城市检索、圆形区域检索、矩形区域检索。开发者可通过接口获取地点（POI）基础或详细地理信息。    </p>
</blockquote>
<p>能直接通过WebAPI获取数据，连解析页面都省了，简直太爽了有木有？</p>
<p>本以为可以直接通过城市的检索的接口直接获取到我想要的数据。<br>然鹅，我错了，事情没我想的那么简单，这个api居然最多返回400条数据。大武汉的药店明显不止400个。我试着找了一下高德，高德更抠门，就200个结果。只能想想其他办法了。</p>
<h3 id="切割地图"><a href="#切割地图" class="headerlink" title="切割地图"></a>切割地图</h3><p>继续找其他的解决办法，忽然发现了地点检索api后面还有一个矩形区域检索功能。灵机一动，我可以把大武汉分成很多个小矩形，分块检索啊，这样也不会有数据丢失。        </p>
<p>想法很好，可当我看到武汉这长得像块‘三鲜豆皮’的地图的时候，问题又来了，我该怎么切割这个地图。  </p>
<p><img src="https://i.loli.net/2018/07/30/5b5f15caa7de8.jpg" alt="wh_map.jpg">  </p>
<p>抱着不能错过一个，也不能浪费api资源的态度，我打算先找到武汉东南西北之最，也就是找到一个可以将武汉包裹的最小矩形。</p>
<p>想到了通过城市边界点筛选的方式获取武汉的最东，最南，最西，最北。结果找了半天没发现百度webapi里有这个，只有一个javascriptAPI有这个功能，比较麻烦。反倒是高德有个“行政区域查询”的api可以直接获取到城市边界。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://restapi.amap.com/v3/config/district?key=您的key&amp;keywords=武汉&amp;subdistrict=0&amp;extensions=all</div></pre></td></tr></table></figure></p>
<p>接下来的事情就简单了，分析获取到的城市边界点列表，找到经纬度的最大最小值，即城市的最东南西北。然后从东到西切20刀，从南到北均匀切20刀。武汉一下就被切成400块了。  </p>
<p>我们就可以分块的去调用地点检索的API，如果有超过400个的，就调整参数，多切几刀。  </p>
<p>当然，这样切肯定有误伤周边城市的情况。这种情况就通过POI的“city”属性去筛选掉。</p>
<p>至此，我们就成功的获取到了我们想要的比较完整的药店的数据了。</p>
<h3 id="其他数据"><a href="#其他数据" class="headerlink" title="其他数据"></a>其他数据</h3><p>有了药店的数据，我们还需要一些其他的数据，例如：行政区域面积啊，人口数量等。<br>像这类的数据，一般在当地的统计局网站都能下载到。 </p>
<h2 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h2><h3 id="药店位置分布"><a href="#药店位置分布" class="headerlink" title="药店位置分布"></a>药店位置分布</h3><p>我猜想，药店的数量应该与人口密度和地方经济情况有所关系。        </p>
<p>首先，我们通过图表看看武汉的人口密度：<br><img src="https://i.loli.net/2018/08/01/5b61bd5f1e4d0.png" alt="武汉人口密度.png"></p>
<p>从图像可以看出，人口密度最大的是江汉区，硚口区和武昌区，这些都是武汉的老城区。<br>黄陂区，江夏，汉南这些都算是郊区，人口密度低，也情有可原。<br>意外的是：主城区洪山区人口密度居然也不高。（可能统计面积的时候几个大湖也算进去了？）        </p>
<p>再看看，我们收集的药店的数据，我爬取的百度地图上能找到的武汉所有药店，一共爬到了1936个，估计还有一些没有收录到的遗漏了。在武汉药监局官网查到的药品零售企业有4317个，但这里可能又很多过期可但未注销的企业。所以这次我们以百度地图爬取到的数据为准。</p>
<p>首先我们看看各个区人数和药店数量的基本情况：<br><img src="https://i.loli.net/2018/08/02/5b631261e4971.png" alt="武汉各区人数和药店数.png">  </p>
<p>基本大多数的区药店数量都超过了1万人一个药店。     </p>
<p>再看看武汉每个区的药店数量情况，武汉各个区域药店的数量占比：<br><img src="https://i.loli.net/2018/08/02/5b62d5e88df71.png" alt="武汉药店各区域占比.png">   </p>
<p>武昌、江岸、洪山、江汉这几个主城区果然还是占了大多的数的药店。</p>
<p>药店密度和人口密度是否有关呢？<br><img src="https://i.loli.net/2018/08/01/5b61c3933b99d.png" alt="武汉各区多少人一个药店.png"></p>
<p>药店最密集的是江岸区，3408个人就有一个药店。而药店比较稀缺的新洲区居然平均26317个人才有一个药店，新洲区的朋友会不会有买药难的问题？</p>
<p>经济状况好的主城区人均药店数明显比郊区高。</p>
<p>光在表格上我们没办法形象的看到药店的分布，所以做成热力图更形象了。<br><img src="https://i.loli.net/2018/08/01/5b61c590c5ae0.png" alt="武汉药店热力分布图.png"></p>
<h3 id="药店店名分析"><a href="#药店店名分析" class="headerlink" title="药店店名分析"></a>药店店名分析</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;其实打算分析药店这个事情，与看完《我不是药神》没啥关系，取这个标题，只是为了蹭一波电影的热度。&lt;br&gt;主要起因是，在世界杯期间看到一条段子：
    
    </summary>
    
      <category term="Python" scheme="http://blog.fbi.st/categories/Python/"/>
    
    
      <category term="Python" scheme="http://blog.fbi.st/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Redis非权威指南(基本知识)</title>
    <link href="http://blog.fbi.st/2017/08/20/redis%E9%9D%9E%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97(%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86)/"/>
    <id>http://blog.fbi.st/2017/08/20/redis非权威指南(基本知识)/</id>
    <published>2017-08-20T12:07:31.000Z</published>
    <updated>2017-09-12T12:25:31.675Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Redis-简介"><a href="#Redis-简介" class="headerlink" title="Redis 简介"></a>Redis 简介</h2><p><center><img src="https://i.loli.net/2017/09/11/59b6a42bf239f.png" alt="redis_logo.png"></center><br>Redis是完全开源免费的一个高性能的key-value存储系统。<br>它可以用作数据库、缓存和消息中间件。  </p>
<blockquote>
<ul>
<li>Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。</li>
<li>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</li>
<li>Redis支持数据的备份，即master-slave模式的数据备份。</li>
</ul>
</blockquote>
<a id="more"></a>
<h2 id="Redis的特点"><a href="#Redis的特点" class="headerlink" title="Redis的特点"></a>Redis的特点</h2><p>Redis将其数据库完全保存在内存中，因此性能极高,能读的速度是110000次/s,写的速度是81000次/s 。<br>Redis支持开发人员常用的大多数数据类型，例如列表，集合，排序集和散列等等。这使得Redis很容易被用来解决各种问题，因为我们知道哪些问题可以更好使用地哪些数据类型来处理解决。<br>Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。<br>Redis还支持 publish/subscribe, 通知, key 过期等等特性。</p>
<h2 id="Redis在项目中的作用"><a href="#Redis在项目中的作用" class="headerlink" title="Redis在项目中的作用"></a>Redis在项目中的作用</h2><p><b>Redis在项目中使用一般作为主要缓存服务。</b></p>
<h3 id="1、会话缓存（Session-Cache）"><a href="#1、会话缓存（Session-Cache）" class="headerlink" title="1、会话缓存（Session Cache）"></a>1、会话缓存（Session Cache）</h3><p>最常用的一种使用Redis的情景是会话缓存（session cache）。用Redis缓存会话比其他存储（如Memcached）的优势在于：Redis提供持久化。</p>
<p>随着 Redis 这些年的改进，很容易找到怎么恰当的使用Redis来缓存会话的文档。甚至广为人知的商业平台Magento也提供Redis的插件。</p>
<h3 id="2、全页缓存（FPC）"><a href="#2、全页缓存（FPC）" class="headerlink" title="2、全页缓存（FPC）"></a>2、全页缓存（FPC）</h3><p>除基本的会话token之外，Redis还提供很简便的FPC平台。回到一致性问题，即使重启了Redis实例，因为有磁盘的持久化，用户也不会看到页面加载速度的下降，这是一个极大改进，类似PHP本地FPC。</p>
<p>再次以Magento为例，Magento提供一个插件来使用Redis作为全页缓存后端。</p>
<p>此外，对WordPress的用户来说，Pantheon有一个非常好的插件  wp-redis，这个插件能帮助你以最快速度加载你曾浏览过的页面。</p>
<h3 id="3、队列"><a href="#3、队列" class="headerlink" title="3、队列"></a>3、队列</h3><p>Reids在内存存储引擎领域的一大优点是提供 list 和 set 操作，这使得Redis能作为一个很好的消息队列平台来使用。Redis作为队列使用的操作，就类似于本地程序语言（如Python）对 list 的 push/pop 操作。</p>
<p>如果你快速的在Google中搜索“Redis queues”，你马上就能找到大量的开源项目，这些项目的目的就是利用Redis创建非常好的后端工具，以满足各种队列需求。例如，Celery有一个后台就是使用Redis作为broker，你可以从这里去查看。</p>
<h3 id="4、排行榜-计数器"><a href="#4、排行榜-计数器" class="headerlink" title="4、排行榜/计数器"></a>4、排行榜/计数器</h3><p>Redis在内存中对数字进行递增或递减的操作实现的非常好。集合（Set）和有序集合（Sorted Set）也使得我们在执行这些操作的时候变的非常简单，Redis只是正好提供了这两种数据结构。</p>
<h3 id="5、发布-订阅"><a href="#5、发布-订阅" class="headerlink" title="5、发布/订阅"></a>5、发布/订阅</h3><p>发布/订阅的使用场景确实非常多。人们在社交网络连接中使用，还可作为基于发布/订阅的脚本触发器，甚至用Redis的发布/订阅功能来建立聊天系统！</p>
<h2 id="Redis-对比-memcached"><a href="#Redis-对比-memcached" class="headerlink" title="Redis 对比 memcached"></a>Redis 对比 memcached</h2><hr>
<table>
<thead>
<tr>
<th>对比</th>
<th>持久化</th>
<th>数据一致性</th>
<th>数据类型</th>
</tr>
</thead>
<tbody>
<tr>
<td>redis</td>
<td>支持持久化</td>
<td>无cas命令/有事务</td>
<td>多种数据结构</td>
</tr>
<tr>
<td>memcached</td>
<td>不支持持久化</td>
<td>有cas保证数据一致性</td>
<td>单一key-value结构  </td>
</tr>
</tbody>
</table>
<h2 id="Redis安装"><a href="#Redis安装" class="headerlink" title="Redis安装"></a>Redis安装</h2><h3 id="Window-下安装"><a href="#Window-下安装" class="headerlink" title="Window 下安装"></a>Window 下安装</h3><p>下载地址：<a href="https://github.com/MSOpenTech/redis/releases" target="_blank" rel="external">https://github.com/MSOpenTech/redis/releases</a></p>
<p>Redis 支持 32 位和 64 位。这个需要根据你系统平台的实际情况选择，这里我们下载 Redis-x64-xxx.zip压缩包到 C 盘，解压后，将文件夹重新命名为 redis。<br><img src="https://i.loli.net/2017/09/11/59b6985850bac.png" alt="file.png"></p>
<p>打开一个 cmd 窗口 使用cd命令切换目录到 C:\redis 运行 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis-server.exe redis.windows.conf</div></pre></td></tr></table></figure></p>
<p>如果想方便的话，可以把 redis 的路径加到系统的环境变量里，这样就省得再输路径了，后面的那个 redis.windows.conf 可以省略，如果省略，会启用默认的。输入之后，会显示如下界面：<br><img src="https://i.loli.net/2017/09/11/59b699409e6c5.png" alt="cmd.png"></p>
<p>这时候另启一个cmd窗口，原来的不要关闭，不然就无法访问服务端了。<br>切换到redis目录下运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis-cli.exe -h 127.0.0.1 -p 6379</div></pre></td></tr></table></figure></p>
<p>设置键值对: <code>set myKey abc</code><br>取出键值对: <code>get myKey</code><br><img src="https://i.loli.net/2017/09/11/59b69a1a58b58.png" alt="cli.png"></p>
<h3 id="Linux下安装"><a href="#Linux下安装" class="headerlink" title="Linux下安装"></a>Linux下安装</h3><p>下载地址：<a href="http://redis.io/download" target="_blank" rel="external">http://redis.io/download</a>，下载最新文档版本。<br>本教程使用的最新文档版本为 2.8.17，下载并安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ wget http://download.redis.io/releases/redis-2.8.17.tar.gz</div><div class="line">$ tar xzf redis-2.8.17.tar.gz</div><div class="line">$ cd redis-2.8.17</div><div class="line">$ make</div></pre></td></tr></table></figure></p>
<p>make完后 redis-2.8.17目录下会出现编译后的redis服务程序redis-server, 还有用于测试的客户端程序redis-cli,两个程序位于安装目录 src 目录下：<br>下面启动redis服务.  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd src</div><div class="line">$ ./redis-server</div></pre></td></tr></table></figure>
<p>注意这种方式启动redis 使用的是默认配置。<br>也可以通过启动参数告诉redis使用指定配置文件使用下面命令启动。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd src</div><div class="line">$ ./redis-server redis.conf</div></pre></td></tr></table></figure>
<p>redis.conf是一个默认的配置文件。我们可以根据需要使用自己的配置文件。<br>启动redis服务进程后，就可以使用测试客户端程序redis-cli和redis服务交互了。 比如:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ cd src</div><div class="line">$ ./redis-cli</div><div class="line">redis&gt; set foo bar</div><div class="line">OK</div><div class="line">redis&gt; get foo</div><div class="line">&quot;bar&quot;</div></pre></td></tr></table></figure>
<h3 id="Ubuntu-下安装"><a href="#Ubuntu-下安装" class="headerlink" title="Ubuntu 下安装"></a>Ubuntu 下安装</h3><p>在 Ubuntu 系统安装 Redi 可以使用以下命令:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$sudo apt-get update</div><div class="line">$sudo apt-get install redis-server</div></pre></td></tr></table></figure>
<p>启动 Redis</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ redis-server</div></pre></td></tr></table></figure>
<p>查看 redis 是否启动？</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ redis-cli</div></pre></td></tr></table></figure>
<p>以上命令将打开以下终端：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
<p>127.0.0.1 是本机 IP ，6379 是 redis 服务端口。现在我们输入 PING 命令。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt; ping</div><div class="line">PONG</div></pre></td></tr></table></figure>
<p>以上说明我们已经成功安装了redis。</p>
<h2 id="Redis-配置"><a href="#Redis-配置" class="headerlink" title="Redis 配置"></a>Redis 配置</h2><p>Redis 的配置文件位于 Redis 安装目录下，文件名为 redis.conf。<br>你可以通过 CONFIG 命令查看或设置配置项。</p>
<h3 id="1-查看配置-GET命令"><a href="#1-查看配置-GET命令" class="headerlink" title="1.查看配置(GET命令)"></a>1.查看配置(GET命令)</h3><p>Redis CONFIG 命令格式如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt; CONFIG GET CONFIG_SETTING_NAME</div></pre></td></tr></table></figure>
<h4 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt; CONFIG GET loglevel</div></pre></td></tr></table></figure>
<p>1) “loglevel”<br>2) “notice”</p>
<h3 id="2-配置redis-SET命令"><a href="#2-配置redis-SET命令" class="headerlink" title="2.配置redis(SET命令)"></a>2.配置redis(SET命令)</h3><p>CONFIG SET 命令基本语法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt; CONFIG SET CONFIG_SETTING_NAME NEW_CONFIG_VALUE</div></pre></td></tr></table></figure>
<h4 id="例如-1"><a href="#例如-1" class="headerlink" title="例如"></a>例如</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt; CONFIG SET loglevel &quot;notice&quot;  </div><div class="line">OK   </div><div class="line">redis 127.0.0.1:6379&gt; CONFIG GET loglevel  </div><div class="line"></div><div class="line">1) &quot;loglevel&quot;</div><div class="line">2) &quot;notice&quot;</div></pre></td></tr></table></figure>
<h3 id="3-redis配置文件详解"><a href="#3-redis配置文件详解" class="headerlink" title="3.redis配置文件详解"></a>3.redis配置文件详解</h3><p>查看链接：<a href="http://blog.51yip.com/nosql/1724.html" target="_blank" rel="external">redis 配置 参数 详解</a></p>
<h2 id="Redis-数据类型"><a href="#Redis-数据类型" class="headerlink" title="Redis 数据类型"></a>Redis 数据类型</h2><p>Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。</p>
<h3 id="String（字符串）"><a href="#String（字符串）" class="headerlink" title="String（字符串）"></a>String（字符串）</h3><p>string是redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个key对应一个value。<br>string类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象 。<br>string类型是Redis最基本的数据类型，一个键最大能存储512MB。</p>
<blockquote>
<p>例如</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt; SET name &quot;hello&quot;</div><div class="line">OK</div><div class="line">redis 127.0.0.1:6379&gt; GET name</div><div class="line">&quot;hello&quot;</div></pre></td></tr></table></figure>
<p>在以上实例中我们使用了 Redis 的 SET 和 GET 命令。键为 name，对应的值为 hello。</p>
<p><i>注意：一个键最大能存储512MB。</i></p>
<h3 id="Hash（哈希）"><a href="#Hash（哈希）" class="headerlink" title="Hash（哈希）"></a>Hash（哈希）</h3><p>Redis hash 是一个键名对集合。<br>Redis hash是一个string类型的field和value的映射表，hash特别适合用于存储对象。</p>
<blockquote>
<p>例如</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; HMSET user:1 username hello password hello points 200</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; HGETALL user:1</div><div class="line">1) &quot;username&quot;</div><div class="line">2) &quot;hello&quot;</div><div class="line">3) &quot;password&quot;</div><div class="line">4) &quot;hello&quot;</div><div class="line">5) &quot;points&quot;</div><div class="line">6) &quot;200&quot;</div></pre></td></tr></table></figure>
<p>以上实例中 hash 数据类型存储了包含用户脚本信息的用户对象。 实例中我们使用了 <code>Redis HMSET</code>, <code>HGETALL</code>命令，user:1 为键值。<br>每个 hash 可以存储 232 -1 键值对（40多亿）。</p>
<h3 id="List（列表）"><a href="#List（列表）" class="headerlink" title="List（列表）"></a>List（列表）</h3><p>Redis表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。</p>
<blockquote>
<p>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt; lpush hello redis</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; lpush hello mongodb</div><div class="line">(integer) 2</div><div class="line">redis 127.0.0.1:6379&gt; lpush hello rabitmq</div><div class="line">(integer) 3</div><div class="line">redis 127.0.0.1:6379&gt; lrange hello 0 10</div><div class="line">1) &quot;rabitmq&quot;</div><div class="line">2) &quot;mongodb&quot;</div><div class="line">3) &quot;redis&quot;</div><div class="line">redis 127.0.0.1:6379&gt;</div></pre></td></tr></table></figure></p>
</blockquote>
<p>列表最多可存储 2^32 - 1 元素 (4294967295, 每个列表可存储40多亿)。</p>
<h3 id="Set（集合）"><a href="#Set（集合）" class="headerlink" title="Set（集合）"></a>Set（集合）</h3><p>Redis的Set是string类型的无序集合。<br>集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。</p>
<p><strong> sadd命令 </strong><br>添加一个string元素到,key对应的set集合中，成功返回1,如果元素已经在集合中返回0,key对应的set不存在返回错误。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sadd key member</div></pre></td></tr></table></figure>
<blockquote>
<p>例如：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt; sadd hello redis</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; sadd hello mongodb</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; sadd hello rabitmq</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; sadd hello rabitmq</div><div class="line">(integer) 0</div><div class="line">redis 127.0.0.1:6379&gt; smembers hello</div><div class="line"></div><div class="line">1) &quot;rabitmq&quot;</div><div class="line">2) &quot;mongodb&quot;</div><div class="line">3) &quot;redis&quot;</div></pre></td></tr></table></figure>
<p>注意：以上实例中 rabitmq 添加了两次，但根据集合内元素的唯一性，第二次插入的元素将被忽略。<br>集合中最大的成员数为 232 - 1(4294967295, 每个集合可存储40多亿个成员)。  </p>
<h3 id="zset-sorted-set：有序集合"><a href="#zset-sorted-set：有序集合" class="headerlink" title="zset(sorted set：有序集合)"></a>zset(sorted set：有序集合)</h3><p>Redis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。<br>不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。<br><strong> zset的成员是唯一的,但分数(score)却可以重复。</strong></p>
<p><strong> zadd 命令</strong><br>添加元素到集合，元素在集合中存在则更新对应score<br><code>zadd key score member</code></p>
<blockquote>
<p>例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt; zadd hello 0 redis</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; zadd hello 0 mongodb</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; zadd hello 0 rabitmq</div><div class="line">(integer) 1</div><div class="line">redis 127.0.0.1:6379&gt; zadd hello 0 rabitmq</div><div class="line">(integer) 0</div><div class="line">redis 127.0.0.1:6379&gt; ZRANGEBYSCORE hello 0 1000</div><div class="line"></div><div class="line">1) &quot;redis&quot;</div><div class="line">2) &quot;mongodb&quot;</div><div class="line">3) &quot;rabitmq&quot;</div></pre></td></tr></table></figure></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Redis-简介&quot;&gt;&lt;a href=&quot;#Redis-简介&quot; class=&quot;headerlink&quot; title=&quot;Redis 简介&quot;&gt;&lt;/a&gt;Redis 简介&lt;/h2&gt;&lt;p&gt;&lt;center&gt;&lt;img src=&quot;https://i.loli.net/2017/09/11/59b6a42bf239f.png&quot; alt=&quot;redis_logo.png&quot;&gt;&lt;/center&gt;&lt;br&gt;Redis是完全开源免费的一个高性能的key-value存储系统。&lt;br&gt;它可以用作数据库、缓存和消息中间件。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。&lt;/li&gt;
&lt;li&gt;Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。&lt;/li&gt;
&lt;li&gt;Redis支持数据的备份，即master-slave模式的数据备份。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://blog.fbi.st/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="http://blog.fbi.st/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Redis" scheme="http://blog.fbi.st/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>前端分页逻辑的思考</title>
    <link href="http://blog.fbi.st/2017/06/01/%E5%89%8D%E7%AB%AF%E5%88%86%E9%A1%B5%E9%80%BB%E8%BE%91%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <id>http://blog.fbi.st/2017/06/01/前端分页逻辑的思考/</id>
    <published>2017-06-01T14:59:42.000Z</published>
    <updated>2018-10-23T16:43:50.454Z</updated>
    
    <content type="html"><![CDATA[<p>/* </p>
<ul>
<li>今天偶有空闲，于是便想把之前随意放上的一段代码做个解释。</li>
<li>其实以现在的角度（过去了两三个月）来看这个标题，明显感觉有点装逼了。</li>
<li>主要原因是这个简单的问题还算不上思考</li>
<li>不过既然都写了，就继续装下去吧。</li>
</ul>
<p>*/<br><a id="more"></a><br>先上代码,项目里抽取的一段,基于tp的.主要看思路.</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;pages&quot;&gt;</div><div class="line">      		&lt;if condition=&quot;$totalPage eq 1&quot;&gt; &lt;!-- 只用一页的情况 --&gt;</div><div class="line">      		&lt;a href=&quot;/page/1&quot;&gt;1&lt;/a&gt;</div><div class="line">      		&lt;elseif condition=&quot;($totalPage gt 1) AND ($totalPage elt 8)&quot;/&gt;&lt;!-- 总页数是2到8也的情况 --&gt;</div><div class="line">      			&lt;if condition=&quot;$page eq 1&quot;&gt;    &lt;!-- 当前页是1的情况   --&gt;      					</div><div class="line">                          &lt;for start=&quot;1&quot; end=&quot;$totalPage+1&quot;&gt;</div><div class="line">		&lt;a href=&quot;/page/&#123;$i&#125;&quot;&gt;&#123;$i&#125;&lt;/a&gt;	  </div><div class="line">		&lt;/for&gt;                         </div><div class="line">                          &lt;a href=&quot;/page/&#123;$page+1&#125;&quot;&gt;下一页&lt;/a&gt;</div><div class="line">                  &lt;elseif condition=&quot;$page eq $totalPage &quot;/&gt;&lt;!-- 当前页是最后一页的情况   --&gt; </div><div class="line">                  		&lt;a href=&quot;/page/&#123;$page-1&#125;&quot;&gt;上一页&lt;/a&gt;</div><div class="line">                          &lt;for start=&quot;1&quot; end=&quot;$totalPage+1&quot;&gt;</div><div class="line">		&lt;a href=&quot;/page/&#123;$i&#125;&quot;&gt;&#123;$i&#125;&lt;/a&gt;	</div><div class="line">		&lt;/for&gt;                           </div><div class="line">					&lt;else /&gt;&lt;!-- 其他(不等于第一和最后一页的)情况   --&gt; </div><div class="line">                        &lt;a href=&quot;/page/&#123;$page-1&#125;&quot;&gt;上一页&lt;/a&gt;</div><div class="line">                          &lt;for start=&quot;1&quot; end=&quot;$totalPage+1&quot;&gt;</div><div class="line">		&lt;a href=&quot;/page/&#123;$i&#125;&quot;&gt;&#123;$i&#125;&lt;/a&gt;	</div><div class="line">		&lt;/for&gt;</div><div class="line">		&lt;a href=&quot;/page/&#123;$page+1&#125;&quot;&gt;下一页&lt;/a&gt;</div><div class="line">                  &lt;/if&gt;</div><div class="line">              &lt;elseif condition=&quot;$totalPage egt 8&quot;/&gt;</div><div class="line">              	&lt;if condition=&quot;$page eq 1&quot;&gt;    &lt;!-- 当前页是1的情况   --&gt;      					</div><div class="line">                          &lt;for start=&quot;1&quot; end=&quot;9&quot;&gt;</div><div class="line">		&lt;a href=&quot;/page/&#123;$i&#125;&quot;&gt;&#123;$i&#125;&lt;/a&gt;	  </div><div class="line">		&lt;/for&gt;                         </div><div class="line">                          &lt;a href=&quot;/page/&#123;$page+1&#125;&quot;&gt;下一页&lt;/a&gt;</div><div class="line">              	&lt;elseif condition=&quot;($page gt 1) AND ($page lt 5)&quot;/&gt; &lt;!-- 当前页是2-4的情况   --&gt;   </div><div class="line">      					&lt;a href=&quot;/page/&#123;$page-1&#125;&quot;&gt;上一页&lt;/a&gt;</div><div class="line">                          &lt;for start=&quot;1&quot; end=&quot;9&quot;&gt;</div><div class="line">		&lt;a href=&quot;/page/&#123;$i&#125;&quot;&gt;&#123;$i&#125;&lt;/a&gt;	</div><div class="line">		&lt;/for&gt;                           </div><div class="line">                          &lt;a href=&quot;/page/&#123;$page+1&#125;&quot;&gt;下一页&lt;/a&gt;</div><div class="line">                  &lt;elseif condition=&quot;($page egt 5) AND ($page elt ($totalPage-3))&quot;/&gt;&lt;!-- 当前页是5-倒数第4的情况   --&gt;  </div><div class="line">                  		&lt;a href=&quot;/page/&#123;$page-1&#125;&quot;&gt;上一页&lt;/a&gt;</div><div class="line">                          &lt;for start=&quot;(-4)&quot; end=&quot;4&quot;&gt;</div><div class="line">		&lt;a href=&quot;/page/&#123;$page+$i&#125;&quot;&gt;&#123;$page+$i&#125;&lt;/a&gt;	</div><div class="line">		&lt;/for&gt;                           </div><div class="line">                          &lt;a href=&quot;/page/&#123;$page+1&#125;&quot;&gt;下一页&lt;/a&gt;</div><div class="line">                  &lt;elseif condition=&quot;$page eq $totalPage&quot;/&gt; &lt;!-- 当前页是最后一页情况   --&gt;</div><div class="line">		&lt;a href=&quot;/page/&#123;$page-1&#125;&quot;&gt;上一页&lt;/a&gt;</div><div class="line">                          &lt;for start=&quot;-7&quot; end=&quot;1&quot;&gt;</div><div class="line">		&lt;a href=&quot;/page/&#123;$page+$i&#125;&quot;&gt;&#123;$page+$i&#125;&lt;/a&gt;	</div><div class="line">		&lt;/for&gt;   </div><div class="line">                  &lt;elseif condition=&quot;$page gt ($totalPage-3)&quot;/&gt;&lt;!--当前页大于最大页数-3且不等于最大页数的情况。--&gt;</div><div class="line">		&lt;a  href=&quot;/page/&#123;$page-1&#125;&quot;&gt;上一页&lt;/a&gt;</div><div class="line">                          &lt;for start=&quot;($totalPage-$page)-7&quot; end=&quot;($totalPage-$page)+1&quot;&gt;</div><div class="line">		&lt;a href=&quot;/page/&#123;$page+$i&#125;&quot;&gt;&#123;$page+$i&#125;&lt;/a&gt;	</div><div class="line">		&lt;/for&gt;                           </div><div class="line">                          &lt;a href=&quot;/page/&#123;$page+1&#125;&quot;&gt;下一页&lt;/a&gt;</div><div class="line">                  &lt;/if&gt;        </div><div class="line">      		&lt;/if&gt;</div><div class="line">       &lt;/div&gt;</div></pre></td></tr></table></figure>
<p>其实在备注中已经很明显了。<br>分为以下几种情况，总页面数：</p>
<h2 id="1-总页数只有一页的情况"><a href="#1-总页数只有一页的情况" class="headerlink" title="1.总页数只有一页的情况"></a>1.总页数只有一页的情况</h2><blockquote>
<p>假设总页数只有1页的话，当前页肯定是1，且没有上一页或下一页</p>
</blockquote>
<h2 id="2-总页数2页到8页的情况（假设共显示八页）"><a href="#2-总页数2页到8页的情况（假设共显示八页）" class="headerlink" title="2.总页数2页到8页的情况（假设共显示八页）"></a>2.总页数2页到8页的情况（假设共显示八页）</h2><blockquote>
<p>首先，总页数小于8的话，所有的页面都应该显示。直接用for循环到最大页数。<br>这种情况下，假设当前页是1的话，就没有上一页，有下一页。<br>假设当前页是最后一页的话，有上一页，但是没有下一页。<br>其他情况下就是上一页和下一页都有。</p>
</blockquote>
<h2 id="3-总页数大于8页的情况"><a href="#3-总页数大于8页的情况" class="headerlink" title="3.总页数大于8页的情况"></a>3.总页数大于8页的情况</h2><blockquote>
<p>这种情况稍微复杂，因为需要控制页面的输出<br>假设当前页是1到5页的情况，显示的是1-8页。并且，当前页是1的情况没有上一页。<br>分离出来就是：<br>当前页为1的情况：没有上一页，有下一页，显示1-8页，<br>当前页为2-5的情况，有上一页和下一页，显示1-8页，<br>那么当页码大于5页的时候呢？？这个时候就需要考虑到三种种情况，<br>一种是：①当前页小于最大页数-3的情况，这个情况下，就显示当前页-4页到当前页+3页，<br>另一种是：②当前页大于最大页数-3且不等于最大页数的情况。<br>最后就是：③当前页是最大页数的情况。<br>这三种情况总结一下就是：<br>情况①：显示上一页和下一页，页码是当前页-4页到当前页+3页<br>情况②：显示上一页和下一页，显示当前（页总页数-当前页）-7 到（总页数-当前页）+1 ps：这种情况稍微要奇怪<br>情况③：显示上一页，不显示下一页，（显示当前页-8）到 当前页。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;/* &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;今天偶有空闲，于是便想把之前随意放上的一段代码做个解释。&lt;/li&gt;
&lt;li&gt;其实以现在的角度（过去了两三个月）来看这个标题，明显感觉有点装逼了。&lt;/li&gt;
&lt;li&gt;主要原因是这个简单的问题还算不上思考&lt;/li&gt;
&lt;li&gt;不过既然都写了，就继续装下去吧。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;*/&lt;br&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://blog.fbi.st/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="PHP" scheme="http://blog.fbi.st/tags/PHP/"/>
    
      <category term="分页" scheme="http://blog.fbi.st/tags/%E5%88%86%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>SSH的原理和运用</title>
    <link href="http://blog.fbi.st/2017/05/31/SSH%E7%9A%84%E5%8E%9F%E7%90%86%E5%92%8C%E8%BF%90%E7%94%A8/"/>
    <id>http://blog.fbi.st/2017/05/31/SSH的原理和运用/</id>
    <published>2017-05-31T13:54:48.000Z</published>
    <updated>2017-11-01T13:51:26.035Z</updated>
    
    <content type="html"><![CDATA[<p><strong> SSH(安全外壳协议) </strong>为 Secure Shell 的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层和传输层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。<br>利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。SSH最初是UNIX系统上的一个程序，后来又迅速扩展到其他操作平台。SSH在正确使用时可弥补网络中的漏洞。<br>SSH客户端适用于多种平台。几乎所有UNIX平台—包括HP-UX、Linux、AIX、Solaris、Digital   UNIX、Irix，以及其他平台，都可运行SSH。<a href="https://0x9.me/xuSFD" target="_blank" rel="external">百度百科:SSH</a><br><a id="more"></a></p>
<p>SSH是每一台Linux电脑的标准配置。<br>随着Linux设备从电脑逐渐扩展到手机、外设和家用电器，SSH的使用范围也越来越广。不仅程序员离不开它，很多普通用户也每天使用。<br>SSH具备多种功能，可以用于很多场合。有些事情，没有它就是办不成。本文是我的学习笔记，总结和解释了SSH的常见用法，希望对大家有用。</p>
<h2 id="1-SSH是什么"><a href="#1-SSH是什么" class="headerlink" title=" 1.SSH是什么 "></a><strong> 1.SSH是什么 </strong></h2><p>简单说，SSH是一种网络协议，用于计算机之间的加密登录。<br>如果一个用户从本地计算机，使用SSH协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露。  </p>
<h2 id="二、最基本的用法"><a href="#二、最基本的用法" class="headerlink" title="二、最基本的用法"></a><strong>二、最基本的用法</strong></h2><p>SSH主要用于远程登录。假定你要以用户名user，登录远程主机host，只要一条简单命令就可以了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh user@host</div></pre></td></tr></table></figure></p>
<p>如果本地用户名与远程用户名一致，登录时可以省略用户名。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh host</div></pre></td></tr></table></figure></p>
<p>SSH的默认端口是22，也就是说，你的登录请求会送进远程主机的22端口。使用p参数，可以修改这个端口。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -p 2222 user@host</div></pre></td></tr></table></figure></p>
<p>上面这条命令表示，ssh直接连接远程主机的2222端口。</p>
<h2 id="三、中间人攻击"><a href="#三、中间人攻击" class="headerlink" title="三、中间人攻击"></a><strong>三、中间人攻击</strong></h2><p>SSH之所以能够保证安全，原因在于它采用了公钥加密。<br>整个过程是这样的：</p>
<p>（1）远程主机收到用户的登录请求，把自己的公钥发给用户。</p>
<p>（2）用户使用这个公钥，将登录密码加密后，发送回来。</p>
<p>（3）远程主机用自己的私钥，解密登录密码，如果密码正确，就同意用户登录。</p>
<p>这个过程本身是安全的，但是实施的时候存在一个风险：如果有人截获了登录请求，然后冒充远程主机，将伪造的公钥发给用户，那么用户很难辨别真伪。因为不像https协议，SSH协议的公钥是没有证书中心（CA）公证的，也就是说，都是自己签发的。<br>可以设想，如果攻击者插在用户与远程主机之间（比如在公共的wifi区域），用伪造的公钥，获取用户的登录密码。再用这个密码登录远程主机，那么SSH的安全机制就荡然无存了。这种风险就是著名的”中间人攻击”（Man-in-the-middle attack）。</p>
<p>SSH协议是如何应对的呢？</p>
<h2 id="四、口令登录"><a href="#四、口令登录" class="headerlink" title="四、口令登录"></a><strong>四、口令登录</strong></h2><p>如果你是第一次登录对方主机，系统会出现下面的提示：<br><code>$ ssh user@host
　　The authenticity of host &#39;host (12.18.429.21)&#39; can&#39;t be established.
　　RSA key fingerprint is 98:2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d.
　　Are you sure you want to continue connecting (yes/no)?</code><br>  这段话的意思是，无法确认host主机的真实性，只知道它的公钥指纹，问你还想继续连接吗？<br>所谓”公钥指纹”，是指公钥长度较长（这里采用RSA算法，长达1024位），很难比对，所以对其进行MD5计算，将它变成一个128位的指纹。上例中是<code>98:2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d</code>，再进行比较，就容易多了。</p>
<p>  很自然的一个问题就是，用户怎么知道远程主机的公钥指纹应该是多少？回答是没有好办法，远程主机必须在自己的网站上贴出公钥指纹，以便用户自行核对。</p>
<p>假定经过风险衡量以后，用户决定接受这个远程主机的公钥。<br><code>Are you sure you want to continue connecting (yes/no)? yes</code></p>
<p>系统会出现一句提示，表示host主机已经得到认可。<br><code>Warning: Permanently added &#39;host,12.18.429.21&#39; (RSA) to the list of known hosts.</code></p>
<p>然后，会要求输入密码。<br><code>Password: (enter password)</code></p>
<p>如果密码正确，就可以登录了。<br>当远程主机的公钥被接受以后，它就会被保存在文件<code>$HOME/.ssh/known_hosts</code>之中。下次再连接这台主机，系统就会认出它的公钥已经保存在本地了，从而跳过警告部分，直接提示输入密码。</p>
<p>每个SSH用户都有自己的known_hosts文件，此外系统也有一个这样的文件，通常是<code>/etc/ssh/ssh_known_hosts</code>，保存一些对所有用户都可信赖的远程主机的公钥。</p>
<h2 id="五、公钥登录"><a href="#五、公钥登录" class="headerlink" title="五、公钥登录"></a><strong>五、公钥登录</strong></h2><p>使用密码登录，每次都必须输入密码，非常麻烦。好在SSH还提供了公钥登录，可以省去输入密码的步骤。</p>
<p>所谓”公钥登录”，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。</p>
<p>这种方法要求用户必须提供自己的公钥。如果没有现成的，可以直接用ssh-keygen生成一个：<br><figure class="highlight plain"><figcaption><span>ssh-keygen```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">  运行上面的命令以后，系统会出现一系列提示，可以一路回车。其中有一个问题是，要不要对私钥设置口令（passphrase），如果担心私钥的安全，这里可以设置一个。</div><div class="line"></div><div class="line">运行结束以后，在`$HOME/.ssh/`目录下，会新生成两个文件：`id_rsa.pub`和`id_rsa`。</div><div class="line">前者是你的公钥，后者是你的私钥。</div><div class="line"></div><div class="line">这时再输入下面的命令，将公钥传送到远程主机host上面：</div><div class="line"></div><div class="line">```$ ssh-copy-id user@host</div></pre></td></tr></table></figure></p>
<p>好了，从此你再登录，就不需要输入密码了。<br>如果还是不行，就打开远程主机的<code>/etc/ssh/sshd_config</code>这个文件，检查下面几行前面”#”注释是否取掉。<br>``RSAAuthentication yes</p>
<p>PubkeyAuthentication yes </p>
<p>AuthorizedKeysFile .ssh/authorized_keys<br>``<br>然后，重启远程主机的ssh服务。</p>
<p>// ubuntu系统　　<code>service ssh restart</code></p>
<p>// debian系统　　<code>/etc/init.d/ssh restart</code></p>
<h2 id="六、authorized-keys文件"><a href="#六、authorized-keys文件" class="headerlink" title="六、authorized_keys文件"></a><strong>六、authorized_keys文件</strong></h2><p>远程主机将用户的公钥，保存在登录后的用户主目录的<code>$HOME/.ssh/authorized_keys</code>文件中。<br>公钥就是一段字符串，只要把它追加在<code>authorized_keys</code>文件的末尾就行了。</p>
<p>这里不使用上面的<code>ssh-copy-id</code>命令，改用下面的命令，解释公钥的保存过程：</p>
<p><code>$ ssh user@host &#39;mkdir -p .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys&#39; &lt; ~/.ssh/id_rsa.pub</code></p>
<p>这条命令由多个语句组成，依次分解开来看：</p>
<p>（1）”<code>$ ssh user@host</code>“，表示登录远程主机；</p>
<p>（2）单引号中的<code>mkdir .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys</code>，表示登录后在远程shell上执行的命令：</p>
<p>（3）”<code>$ mkdir -p .ssh</code>“的作用是，如果用户主目录中的.ssh目录不存在，就创建一个；</p>
<p>（4）<code>&#39;cat &gt;&gt; .ssh/authorized_keys&#39; &lt; ~/.ssh/id_rsa.pub</code>的作用是，将本地的公钥文件<code>~/.ssh/id_rsa.pub</code>，重定向追加到远程文件authorized_keys的末尾。</p>
<p>写入<code>authorized_keys</code>文件后，公钥登录的设置就完成了。</p>
<h2 id="拓展阅读："><a href="#拓展阅读：" class="headerlink" title="拓展阅读："></a>拓展阅读：</h2><p><a href="http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html" target="_blank" rel="external">数字签名是什么？</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; SSH(安全外壳协议) &lt;/strong&gt;为 Secure Shell 的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层和传输层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。&lt;br&gt;利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。SSH最初是UNIX系统上的一个程序，后来又迅速扩展到其他操作平台。SSH在正确使用时可弥补网络中的漏洞。&lt;br&gt;SSH客户端适用于多种平台。几乎所有UNIX平台—包括HP-UX、Linux、AIX、Solaris、Digital   UNIX、Irix，以及其他平台，都可运行SSH。&lt;a href=&quot;https://0x9.me/xuSFD&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;百度百科:SSH&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://blog.fbi.st/categories/linux/"/>
    
    
      <category term="SSH" scheme="http://blog.fbi.st/tags/SSH/"/>
    
      <category term="Linux" scheme="http://blog.fbi.st/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>mysql 数据库导入/导出(总结备忘)</title>
    <link href="http://blog.fbi.st/2017/05/20/mysql%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%BC%E5%85%A5%E3%80%81%E5%AF%BC%E5%87%BA(%E6%80%BB%E7%BB%93%E5%A4%87%E5%BF%98)/"/>
    <id>http://blog.fbi.st/2017/05/20/mysql 数据库导入、导出(总结备忘)/</id>
    <published>2017-05-20T12:07:31.000Z</published>
    <updated>2017-09-14T13:54:56.305Z</updated>
    
    <content type="html"><![CDATA[<p>在linux下直接用命令行操作就可以 在windows下 一般情况下有两种方法一个也是用命令行 另一个是用phpmyadmin</p>
<h2 id="1-phpmyadmin"><a href="#1-phpmyadmin" class="headerlink" title="1.phpmyadmin"></a>1.phpmyadmin</h2><p>先来说说phpmyadmin 这个工具导出和导入很简单 而且导入时无需建库 直接还原成原来的数据库   用<strong> source </strong><br> 也可以还原 但他导入文件时有大小限制不能超过20M<br><a id="more"></a><br>再来说说 <strong> mysqldump </strong>和 <strong> source </strong>  用命令操作很快 但是想把导出的文件再导入时必须先建立一个数据库(这个库可以随便起名) 然后进入数据库后才能导入用phpmyadmin导入<br><strong> mysqldump </strong>导出的文件也得需要这步</p>
<h2 id="2-其他命令方式"><a href="#2-其他命令方式" class="headerlink" title="2.其他命令方式"></a>2.其他命令方式</h2><p>下面是从前辈那copy来的命令具体使用方法<br>1.导出整个数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump -u 用户名 -p 数据库名 &gt; 导出的文件名</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump -uroot -proot dingding &gt; 1.sql</div></pre></td></tr></table></figure>
<p>2.导出一个表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump -u 用户名 -p 数据库名 表名&gt; 导出的文件名</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump -uroot -proot dingding &gt;F:/dingding/wcnc.sql</div></pre></td></tr></table></figure>
<p>3.导出一个数据库结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump -u wcnc -p -d --add-drop-table smgp_apps_wcnc &gt;d:wcnc_db.sql</div></pre></td></tr></table></figure></p>
<p>-d 没有数据 –add-drop-table 在每个create语句之前增加一个drop table<br>　　<br>备忘:</p>
<blockquote>
<p>mysqldump在linux下可直接使用 在windows下有时需要进入mysql/bin中使用 因为有时用的是类似appserv的套装软件 这样的话命令就不能直接使用 因为这些命令没在环境变量的目录里 而且用mysqldump导出的备份 必须先建立数据库才能导入</p>
</blockquote>
<p> 4.导入数据库<br>　　常用<code>source</code>命令<br>　　进入mysql数据库控制台，<br>　　如<code>mysql -u root -p</code><br>　　mysql&gt;use 数据库<br>　　然后使用source命令，后面参数为脚本文件(如这里用到的.sql)<br>　　<code>mysql&gt;source d:wcnc_db.sql</code></p>
<p>存疑: phpmyadmin导入有大小限制 不知道source导入时有没限制 而且导出时是不可以限制文件大小 并且分数个文件导出</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在linux下直接用命令行操作就可以 在windows下 一般情况下有两种方法一个也是用命令行 另一个是用phpmyadmin&lt;/p&gt;
&lt;h2 id=&quot;1-phpmyadmin&quot;&gt;&lt;a href=&quot;#1-phpmyadmin&quot; class=&quot;headerlink&quot; title=&quot;1.phpmyadmin&quot;&gt;&lt;/a&gt;1.phpmyadmin&lt;/h2&gt;&lt;p&gt;先来说说phpmyadmin 这个工具导出和导入很简单 而且导入时无需建库 直接还原成原来的数据库   用&lt;strong&gt; source &lt;/strong&gt;&lt;br&gt; 也可以还原 但他导入文件时有大小限制不能超过20M&lt;br&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://blog.fbi.st/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Mysql" scheme="http://blog.fbi.st/tags/Mysql/"/>
    
      <category term="数据库" scheme="http://blog.fbi.st/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch简介</title>
    <link href="http://blog.fbi.st/2017/05/20/elasticsearch%E7%AE%80%E4%BB%8B/"/>
    <id>http://blog.fbi.st/2017/05/20/elasticsearch简介/</id>
    <published>2017-05-20T12:07:31.000Z</published>
    <updated>2017-06-25T10:20:43.889Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、elasticsearch是什么"><a href="#一、elasticsearch是什么" class="headerlink" title="一、elasticsearch是什么"></a>一、elasticsearch是什么</h2><blockquote>
<p>ElasticSearch是一个基于<a href="http://baike.baidu.com/item/Lucene?sefr=enterbtn" target="_blank" rel="external">Lucene</a>的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于<a href="http://baike.baidu.com/view/1316082.htm" target="_blank" rel="external">云计算</a>中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。<br>(百度百科)<br><a id="more"></a><br>理解这段话简单理解就是：ES是一个搜索引擎，是基于Lucene的。它是一个提供了基于<a href="http://baike.baidu.com/item/RESTful?sefr=enterbtn" target="_blank" rel="external">RESTful</a> 的web接口，能够达到实时，稳定，可靠，快速的搜索引擎。</p>
</blockquote>
<p>Elasticsearch也使用Java开发并使用Lucene作为其核心来实现所有索引和搜索的功能，但是它的目的是通过简单的RESTful API来隐藏Lucene的复杂性，从而让全文搜索变得简单。</p>
<p>ES是开源的，它的官网是：<a href="www.elastic.co">www.elastic.co</a>，</p>
<p>github项目地址是：<a href="https://github.com/elastic/elasticsearch" target="_blank" rel="external">www.github.com/elastic/elasticsearch</a></p>
<p>中文论坛：<a href="elasticsearch.cn">elasticsearc.cn</a></p>
<h2 id="二、elasticsearch能做什么"><a href="#二、elasticsearch能做什么" class="headerlink" title="二、elasticsearch能做什么"></a>二、elasticsearch能做什么</h2><p>Elasticsearch不仅仅是Lucene和全文搜索，其他特点还包括：</p>
<ul>
<li>分布式的实时文件存储，每个字段都被索引并可被搜索</li>
<li>分布式的实时分析搜索引擎</li>
<li>可以扩展到上百台服务器，处理PB级结构化或非结构化数据</li>
</ul>
<p>而且，所有的这些功能被集成到一个服务里面，你的应用可以通过简单的RESTful API、各种语言的客户端甚至命令行与之交互。<br>总结一句话：<strong>ES是一个功能强大，使用简单的分布式的全文搜索引擎。</strong></p>
<h2 id="三、elasticsearch文档的概念"><a href="#三、elasticsearch文档的概念" class="headerlink" title="三、elasticsearch文档的概念"></a>三、elasticsearch文档的概念</h2><p>在Elasticsearch中，数据是以文档(document)形式存在的，归属于一种类型(type),而这些类型存在于索引(index)。和关系型数据库中的概念对比：</p>
<table>
<thead>
<tr>
<th style="text-align:left">SQL</th>
<th style="text-align:left">database</th>
<th style="text-align:left">table</th>
<th style="text-align:left">row</th>
<th style="text-align:left">column</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong> elasticsearch</strong></td>
<td style="text-align:left">index</td>
<td style="text-align:left">type</td>
<td style="text-align:left">document</td>
<td style="text-align:left">field</td>
</tr>
</tbody>
</table>
<p>其实这样的对比并不是完全的准确的，但是有助于我们理解elasticsearch的数据存储格式。</p>
<h2 id="四、个人对ES的一些理解"><a href="#四、个人对ES的一些理解" class="headerlink" title="四、个人对ES的一些理解"></a>四、个人对ES的一些理解</h2><p>elasticsearch主要优势是：<strong>速度快</strong>，使用方便，分布式的，功能强大。<br>ES官方的想做的是ELK结合起来做日志分析等工作。估计这也是它最多的应用场景。<br>ES使用非常方便，官方文档也比较全，社区也很活跃。估计以后的发展会越来越好，应用场景会越来越多。</p>
<p>关于更详细的ES简介可以查看网上有朋友翻译的<a href="https://es.xiaoleilu.com/" target="_blank" rel="external">《Elasticsearch权威指南》</a><br>也可以看看这个朋友写的ES基本概念：<a href="http://blog.csdn.net/laoyang360/article/details/52244917" target="_blank" rel="external">Elasticsearch学习，请先看这一篇！</a></p>
<p><em><a href="http://www.jianshu.com/p/ede55b4110b1" target="_blank" rel="external">《elasticsearch非权威指南》目录</a></em><br><em>本笔记欢迎转载，欢迎分享，转载分享不用通知作者。不过，如果可以的话希望能注明出处，看完文章还能点个赞。</em></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、elasticsearch是什么&quot;&gt;&lt;a href=&quot;#一、elasticsearch是什么&quot; class=&quot;headerlink&quot; title=&quot;一、elasticsearch是什么&quot;&gt;&lt;/a&gt;一、elasticsearch是什么&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;ElasticSearch是一个基于&lt;a href=&quot;http://baike.baidu.com/item/Lucene?sefr=enterbtn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lucene&lt;/a&gt;的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于&lt;a href=&quot;http://baike.baidu.com/view/1316082.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;云计算&lt;/a&gt;中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。&lt;br&gt;(百度百科)&lt;br&gt;
    
    </summary>
    
      <category term="Elasticsearch非权威指南" scheme="http://blog.fbi.st/categories/Elasticsearch%E9%9D%9E%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.fbi.st/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>简述应用程序接口(API)</title>
    <link href="http://blog.fbi.st/2017/05/20/%E7%AE%80%E8%BF%B0%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%8F%A3(API)/"/>
    <id>http://blog.fbi.st/2017/05/20/简述应用程序接口(API)/</id>
    <published>2017-05-20T12:07:31.000Z</published>
    <updated>2017-12-29T14:35:13.606Z</updated>
    
    <content type="html"><![CDATA[<p>写下这个文章的原因是,我发现身边一些的朋友可能是因为之前没有接触过API,以至于对API有些不解和抵触.<br>因为微信开发/地图定位/各种大数据的信息查询,让接口(api)成为了一个非常常用的工具.这篇文章是我自己的一些理解,由于本人也是个小白,肯定有很多地方不到位,希望能指出.首先,我们从API是什么开始说.</p>
<h2 id="1-API是什么"><a href="#1-API是什么" class="headerlink" title="1.API是什么?"></a>1.API是什么?</h2><blockquote>
<p><strong>维基百科的解释是:</strong><br>应用程序接口 (<strong>A</strong>pplication <strong>P</strong>rogramming <strong>I</strong>nterface 简称:API)为：“‘电脑<a href="https://zh.wikipedia.org/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" target="_blank" rel="external">操作系统</a>（Operating system）’或‘<a href="https://zh.wikipedia.org/wiki/%E5%87%BD%E5%BC%8F%E5%BA%AB" target="_blank" rel="external">程序库</a>’提供给应用程序调用使用的代码”。其主要目的是让应用程序开发人员得以调用一组<a href="https://zh.wikipedia.org/wiki/%E5%87%BD%E6%95%B0_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6" target="_blank" rel="external">例程</a>)功能，而无须考虑其底层的源代码为何、或理解其内部工作机制的细节。API本身是<a href="https://zh.wikipedia.org/w/index.php?title=%E6%8A%BD%E8%B1%A1_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8" target="_blank" rel="external">抽象</a>&amp;action=edit&amp;redlink=1)的，它仅定义了一个<a href="https://zh.wikipedia.org/wiki/%E4%BB%8B%E9%9D%A2_(%E9%9B%BB%E8%85%A6%E7%A7%91%E5%AD%B8" target="_blank" rel="external">接口</a>)，而不涉及应用程序在实际实现过程中的具体操作。</p>
</blockquote>
<h2 id="2-简单举例"><a href="#2-简单举例" class="headerlink" title="2.简单举例"></a>2.简单举例</h2><p>简而言之接口就是一个抽象的,不需要考虑内部细节的东西.你拿来用就可以了.这么讲可能抽象了一些,我们举个例子:<br>以百度地图IP定位的API为例:<br><strong>服务地址:</strong><br><code>http://api.map.baidu.com/location/ip</code></p>
<p><strong>接口参数:</strong><br><img src="http://upload-images.jianshu.io/upload_images/2229907-54cc1480dbcdce86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="百度地图接口参数"></p>
<p><strong>返回结果:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">   address: &quot;CN|北京|北京|None|CHINANET|1|None&quot;, #地址 </div><div class="line">   content: #详细内容 </div><div class="line">       &#123; address: &quot;北京市&quot;, #简要地址 </div><div class="line">         address_detail: #详细地址信息 </div><div class="line">            &#123; city: &quot;北京市&quot;, #城市 </div><div class="line">            city_code: 131, #百度城市代码 </div><div class="line">            district: &quot;&quot;, #区县 </div><div class="line">            province: &quot;北京市&quot;, #省份 </div><div class="line">            street: &quot;&quot;, #街道 </div><div class="line">            street_number: &quot;&quot; #门址 </div><div class="line">            &#125;, point: #百度经纬度坐标值 </div><div class="line">            &#123; x: &quot;116.39564504&quot;, y: &quot;39.92998578&quot; </div><div class="line">            &#125;</div><div class="line">       &#125;,</div><div class="line">     status: 0 #返回状态码 </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><u>那么,服务地址/接口参数/返回结果分别是什么意思呢?</u><br>我们一一来理解:<br><strong>服务地址:</strong> 即我们需要数据请求的页面地址.</p>
<p><strong>请求参数</strong> 有的时候我们不只从接口上取值,我们还需要用一种特殊的方式告诉服务器,我们需要什么数据,你给我们需要的就可以了,别瞎给.这种方式通常是URL传参的形式.比如百度的这个api就可以这样传.<br><code>http://api.map.baidu.com/location/ip?ak=E4805d16520de693a3fe707cdc962045&amp;ip=202.198.16.3&amp;coor=bd09ll</code><br>通过url,我们告诉百度,我们的ak(access key)是:E48….62045,我们要定位的ip是:202.198.16.3,coor是:bd09ll(告诉百度我们需要经纬坐标).<br>这就是一中最最常用的使用API的方式.</p>
<p><strong>返回结果</strong> 上面我们通过URL传参的方式告诉了百度服务器,我们需要的是IP为202.198.16.3的位置信息,而且需要经纬坐标值(coor=bd09ll),并且我们的Ak值是对的,这时候,百度就会输出一个结果在页面里,通常是JSON字符串的形式.如:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&#123; </div><div class="line">  address: &quot;CN|吉林|长春|None|CERNET|1|None&quot;, </div><div class="line">  content: &#123; </div><div class="line">    address: &quot;吉林省长春市&quot;, </div><div class="line">    address_detail: &#123; </div><div class="line">      city: &quot;长春市&quot;, </div><div class="line">      city_code: 53, </div><div class="line">      district: &quot;&quot;, </div><div class="line">      province: &quot;吉林省&quot;, </div><div class="line">      street: &quot;&quot;, </div><div class="line">      street_number: &quot;&quot; </div><div class="line">    &#125;, </div><div class="line">    point: &#123; </div><div class="line">      x: &quot;125.31364243&quot;, y: &quot;43.89833761&quot; </div><div class="line">    &#125; </div><div class="line">  &#125;, status: 0 </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我们可以通过读取url页面的形式来获取返回的json字符串.再应用到我们的项目中.<br><strong><em>上述就是一个最简单的API使用,也是最本质/常用的一种.(传值和取值)</em></strong></p>
<hr>
<p>从上面的例子中,我们就可以知道,为什么API不需要考虑程序的内部细节了吧?其实它就好像一个封装好的电池,我们放到卡槽里用就行了,不需要去了解内部结构.</p>
<h2 id="3-写一个简单的API"><a href="#3-写一个简单的API" class="headerlink" title="3.写一个简单的API"></a>3.写一个简单的API</h2><p>对于大型的API内部封装的算法是非常复杂的.但它的原理并不难,我们自己就可以尝试着写上一个小小的API.这里我给个例子:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="comment">#假设存为index.php到根目录</span></div><div class="line">header (<span class="string">'content-type:text/html;charset=utf-8'</span>);</div><div class="line">$con = mysql_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>);</div><div class="line"><span class="keyword">if</span> (!$con)</div><div class="line">  &#123;</div><div class="line">  <span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysql_error());</div><div class="line">  &#125;</div><div class="line">mysql_select_db(<span class="string">'chaxun'</span>,$con);</div><div class="line">	$token=<span class="keyword">isset</span>($_GET[<span class="string">'token'</span>])?$_GET[<span class="string">'token'</span>]:<span class="string">"1"</span>;</div><div class="line"><span class="keyword">if</span> ($token==<span class="number">123</span>) &#123;</div><div class="line">	$sql=<span class="string">"SELECT * FROM data;"</span>;</div><div class="line">	$result = mysql_query($sql);</div><div class="line"></div><div class="line">	<span class="keyword">while</span>($row = mysql_fetch_array($result, MYSQL_ASSOC))&#123;</div><div class="line">    $rst[]=$row;</div><div class="line">	&#125;</div><div class="line">	$rst_json = json_encode($rst);</div><div class="line">	<span class="keyword">echo</span> $rst_json;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">	<span class="keyword">echo</span> <span class="string">"token错误!"</span>;</div><div class="line">&#125;</div><div class="line">mysql_close();</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>上面的例子,<br>我们API服务地址就是:<code>http://localhost/index.php</code><br>接口参数我们需要传一个<code>token=123</code><br>返回结果就是一个查询数据库的结果,转换的json字符串.<br>完整的url拼起来就是:<a href="http://localhost/index.php?token=123" target="_blank" rel="external">http://localhost/index.php?token=123</a><br>看吧,其实写个接口就这么简单.<br>好困,睡了,明天再来补完整.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;写下这个文章的原因是,我发现身边一些的朋友可能是因为之前没有接触过API,以至于对API有些不解和抵触.&lt;br&gt;因为微信开发/地图定位/各种大数据的信息查询,让接口(api)成为了一个非常常用的工具.这篇文章是我自己的一些理解,由于本人也是个小白,肯定有很多地方不到位,希望
    
    </summary>
    
      <category term="PHP" scheme="http://blog.fbi.st/categories/PHP/"/>
    
    
      <category term="php" scheme="http://blog.fbi.st/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch名词解释</title>
    <link href="http://blog.fbi.st/2017/05/20/ES%E4%B8%80%E4%BA%9B%E5%90%8D%E8%AF%8D%E7%9A%84%E8%A7%A3%E9%87%8A/"/>
    <id>http://blog.fbi.st/2017/05/20/ES一些名词的解释/</id>
    <published>2017-05-20T12:07:31.000Z</published>
    <updated>2017-06-25T10:24:07.690Z</updated>
    
    <content type="html"><![CDATA[<p>本来这个打算后面再来写的，看到简书上一个朋友归纳好了，我就直接借过来了。</p>
<h2 id="数据层面："><a href="#数据层面：" class="headerlink" title="数据层面："></a>数据层面：</h2><blockquote>
<p><strong>Index</strong>：Elasticsearch用来存储数据的逻辑区域，它类似于关系型数据库中的db概念。一个index可以在一个或者多个shard上面，同时一个shard也可能会有多个replicas。</p>
<p><strong> Document type</strong>：为了查询需要，一个index可能会有多种类型document，也就是会有多个         document type，但需要注意，不同的document type里面同名的field一定要是相同类型的。</p>
<p><strong>Document</strong>：Elasticsearch里面存储的实体数据，类似于关系数据中一个table里面的一行数据。</p>
<p><strong>field：</strong>document由多个field组成，不同类型的document里面同名的field一定具有相同的类型。</p>
<p><strong>multivalued</strong>： document里面field可以重复出现，也就是一个field会有多个值，即multivalued。</p>
<p><strong>Mapping</strong>：存储field的相关映射信息，不同document type会有不同的mapping。</p>
</blockquote>
<ul>
<li><em>对于熟悉MySQL的童鞋，我们只需要大概认为Index就是一个database，document就是一行数据，field就是table的column，mapping就是table的定义，而document type就是一个table就可以了。</em></li>
</ul>
<hr>
<p><em><a href="http://www.jianshu.com/p/ede55b4110b1" target="_blank" rel="external">《elasticsearch学习笔记》目录</a></em><br><em>本笔记欢迎转载，欢迎分享，转载分享不用通知作者。不过，如果可以的话希望能注明出处，看完文章还能点个赞。</em></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本来这个打算后面再来写的，看到简书上一个朋友归纳好了，我就直接借过来了。&lt;/p&gt;
&lt;h2 id=&quot;数据层面：&quot;&gt;&lt;a href=&quot;#数据层面：&quot; class=&quot;headerlink&quot; title=&quot;数据层面：&quot;&gt;&lt;/a&gt;数据层面：&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;
    
    </summary>
    
      <category term="Elasticsearch非权威指南" scheme="http://blog.fbi.st/categories/Elasticsearch%E9%9D%9E%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.fbi.st/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop+Hbase+ZooKeeper集群搭建方法</title>
    <link href="http://blog.fbi.st/2017/05/20/Hadoop+Hbase+ZooKeeper%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.fbi.st/2017/05/20/Hadoop+Hbase+ZooKeeper集群搭建方法/</id>
    <published>2017-05-20T12:07:31.000Z</published>
    <updated>2017-06-25T09:08:48.539Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://archive.apache.org/dist/hadoop/common/" target="_blank" rel="external">hadoop的下载地址</a><br><a href="http://archive.apache.org/dist/hbase/" target="_blank" rel="external">hbase的下载地址</a><br><a href="http://archive.apache.org/dist/hadoop/zookeeper/" target="_blank" rel="external">zookeeper的下载地址</a></p>
<hr>
<h2 id="1、-主机配置如下："><a href="#1、-主机配置如下：" class="headerlink" title="1、 主机配置如下："></a>1、 主机配置如下：</h2><p>（添加到/etc/hosts文件里面）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">192.168.0.211 master  </div><div class="line">#（用于集群主机提供hmaster namenode jobtasker服务 ）  </div><div class="line">192.168.0.212 s1      </div><div class="line">#(用于集群丛机提供regionsrever datanode tasktacuter服务)  </div><div class="line">192.168.0.213 s2</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="2、安装jdk1-6-2-X"><a href="#2、安装jdk1-6-2-X" class="headerlink" title="2、安装jdk1.6.2.X"></a>2、安装jdk1.6.2.X</h2><h2 id="3、添加java环境变量"><a href="#3、添加java环境变量" class="headerlink" title="3、添加java环境变量"></a>3、添加java环境变量</h2><p>（<code>/etc/profile</code>），后执行source /etc/profile ,使环境变量立即生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/java/jdk1.6.0_26/  #java 的目录</div><div class="line">export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib  </div><div class="line">export PATH=$JAVA_HOME/bin:$PATH:$CATALINA_HOME/bin  </div><div class="line">export HADOOP_HOME=/home/hadoop/hadoop  </div><div class="line">export HBASE_HOME=/home/hadoop/hbase  </div><div class="line">PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HBASE_HOME/bin</div></pre></td></tr></table></figure></p>
<h2 id="4、在三台电脑上添加hadoop用户"><a href="#4、在三台电脑上添加hadoop用户" class="headerlink" title="4、在三台电脑上添加hadoop用户"></a>4、在三台电脑上添加hadoop用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">useradd hadoop</div></pre></td></tr></table></figure>
<h2 id="5、在-home-hadoop-bashrc添加变量"><a href="#5、在-home-hadoop-bashrc添加变量" class="headerlink" title="5、在/home/hadoop/.bashrc添加变量"></a>5、在<code>/home/hadoop/.bashrc</code>添加变量</h2><ul>
<li><u>(将hadoop hbase的配置文件放到hadoop安装包根目录文件下，目的在于以后升级hadoop和hbase的时候不用重新导入配置文件)</u><br>*<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export HADOOP_CONF_DIR=/home/hadoop/hadoop-config  </div><div class="line">export HBASE_CONF_DIR=/home/hadoop/hbase-config</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="6、将hadoop-hbase-zookepper的安装包解压"><a href="#6、将hadoop-hbase-zookepper的安装包解压" class="headerlink" title="6、将hadoop hbase zookepper的安装包解压"></a>6、将hadoop hbase zookepper的安装包解压</h2><p>到<code>/home/hadoop/</code>下，<u>并重命名</u>为<code>hadoop hbase zookepper</code>，在<code>home/hadoop/</code>下建立<code>hadoop-config</code>和<code>hbase-config</code>文件夹，并且将<code>home/hadoop/hadoop/conf</code>下的<code>masters、slaves、core-site、mapred-sit、hdfs-site、hadoop-env</code>拷贝到此文件夹，将<code>home/hadoop/hbase/conf</code>下的<code>hbase-site</code>和<code>hbase-env.sh</code>拷贝到次文件夹。</p>
<h2 id="7、修改masters、slaves文件："><a href="#7、修改masters、slaves文件：" class="headerlink" title="7、修改masters、slaves文件："></a>7、修改masters、slaves文件：</h2><p> 分别为 <code>master</code> 和<code>s1</code>与<code>s2</code></p>
<h2 id="8、修改hadoop-env-sh的变量："><a href="#8、修改hadoop-env-sh的变量：" class="headerlink" title="8、修改hadoop-env.sh的变量："></a>8、修改<code>hadoop-env.sh</code>的变量：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/java/jdk1.6.0_26/  </div><div class="line">export HADOOP_PID_DIR=/home/hadoop/hadoop/tmp</div></pre></td></tr></table></figure>
<p>##9、修改<code>core-site.xml</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt; </div><div class="line">&lt;property&gt; </div><div class="line">&lt;name&gt;fs.default.name&lt;/name&gt; </div><div class="line">&lt;value&gt;hdfs://master:9000&lt;/value&gt; </div><div class="line">&lt;/property&gt; </div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p>修改<code>mapred-site.xml</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt; </div><div class="line">&lt;property&gt; </div><div class="line">   &lt;name&gt;mapred.job.tracker&lt;/name&gt; </div><div class="line">   &lt;value&gt;hdfs://master:9001/&lt;/value&gt; </div><div class="line">&lt;/property&gt;  </div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p>修改<code>hdfs-site.xml</code>（<u>name和data文件夹不要手动建立</u>）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt; </div><div class="line">&lt;property&gt; </div><div class="line">&lt;name&gt;dfs.name.dir&lt;/name&gt; </div><div class="line">&lt;value&gt;/home/hadoop/hadoop/name&lt;/value&gt; </div><div class="line">&lt;/property&gt; </div><div class="line">&lt;property&gt; </div><div class="line">&lt;name&gt;dfs.data.dir&lt;/name&gt; </div><div class="line">&lt;value&gt;/home/hadoop/hadoop/data/&lt;/value&gt; </div><div class="line">&lt;/property&gt; </div><div class="line">&lt;property&gt; </div><div class="line">   &lt;name&gt;dfs.replication&lt;/name&gt; </div><div class="line">   &lt;value&gt;3&lt;/value&gt; </div><div class="line">&lt;/property&gt; </div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<h2 id="10、设置master-s1-s2机几台器之间无密码访问："><a href="#10、设置master-s1-s2机几台器之间无密码访问：" class="headerlink" title="10、设置master, s1, s2机几台器之间无密码访问："></a>10、设置master, s1, s2机几台器之间无密码访问：</h2><h2 id="11、复制目录至集群丛机"><a href="#11、复制目录至集群丛机" class="headerlink" title="11、复制目录至集群丛机"></a>11、复制目录至集群丛机</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">scp -r /home/hadoop/hadoop s1:/home/hadoop</div><div class="line">scp -r /home/hadoop/hadoop s2:/home/hadoop</div></pre></td></tr></table></figure>
<h2 id="12、切换到-home-hadoop-hadoop目录下"><a href="#12、切换到-home-hadoop-hadoop目录下" class="headerlink" title="12、切换到/home/hadoop/hadoop目录下"></a>12、切换到<code>/home/hadoop/hadoop</code>目录下</h2><p>执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bin/hadoop namenode -format</div></pre></td></tr></table></figure>
<p>(格式化master主机生成name data tmp等文件夹)</p>
<h2 id="13、启动namenode"><a href="#13、启动namenode" class="headerlink" title="13、启动namenode"></a>13、启动namenode</h2><p>执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bin/start-dfs.sh</div></pre></td></tr></table></figure></p>
<p>使用jps命令查看<code>namenode、secondnamenode</code>是否正常启动：<br>ie里面输入<a href="http://master:50070" target="_blank" rel="external">http://master:50070</a> 查看<code>namenode</code>的相关配置信息、运行状态和日志文件</p>
<h2 id="14、启动mapred"><a href="#14、启动mapred" class="headerlink" title="14、启动mapred"></a>14、启动<code>mapred</code></h2><p>执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bin/start-mapred.sh</div></pre></td></tr></table></figure></p>
<p>使用<code>jps</code>命令查看<code>nomenode、secondnamenode</code>是否正常启动：<br>ie里面输入<a href="http://master:50030" target="_blank" rel="external">http://master:50030</a>  查看jobtasker的相关配置信息、运行状态和日志文件</p>
<hr>
<h1 id="hbase-zookeeper集群搭建："><a href="#hbase-zookeeper集群搭建：" class="headerlink" title="hbase+zookeeper集群搭建："></a>hbase+zookeeper集群搭建：</h1><h2 id="1、复制目录修改文件"><a href="#1、复制目录修改文件" class="headerlink" title="1、复制目录修改文件"></a>1、复制目录修改文件</h2><p>将<code>/home/hadoop/hadoop/conf/</code>目录下的<code>hbase-site.xml、regionserver和hbase-env.sh</code>拷贝到<code>/home/hadoop/hbase-config/</code>目录下；<br>编辑<code>hbase-site.xml</code>配置文件，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;property&gt; </div><div class="line">&lt;name&gt;hbase.rootdir&lt;/name&gt; </div><div class="line">&lt;value&gt;hdfs://master:9000/hbase&lt;/value&gt; </div><div class="line">&lt;/property&gt; </div><div class="line">&lt;property&gt; </div><div class="line">&lt;name&gt;hbase.cluster.distributed&lt;/name&gt; </div><div class="line">&lt;value&gt;true&lt;/value&gt; </div><div class="line">&lt;/property&gt; </div><div class="line">&lt;property&gt; </div><div class="line">&lt;name&gt;hbase.master&lt;/name&gt; </div><div class="line">&lt;value&gt;master&lt;/value&gt; </div><div class="line">&lt;/property&gt; </div><div class="line">&lt;property&gt; </div><div class="line">&lt;name&gt;hbase.zookeeper.quorum&lt;/name&gt; </div><div class="line">&lt;value&gt;s1,s2&lt;/value&gt; </div><div class="line">&lt;/property&gt; </div><div class="line">&lt;property&gt; </div><div class="line">&lt;name&gt;zookeeper.session.timeout&lt;/name&gt; </div><div class="line">&lt;value&gt;60000000&lt;/value&gt; </div><div class="line">&lt;/property&gt; </div><div class="line">&lt;property&gt; </div><div class="line">&lt;name&gt;hbase.zookeeper.property.clientport&lt;/name&gt; </div><div class="line">&lt;value&gt;2222&lt;/value&gt; </div><div class="line">&lt;/property&gt;</div></pre></td></tr></table></figure>
<h2 id="2、编辑regionserver文件"><a href="#2、编辑regionserver文件" class="headerlink" title="2、编辑regionserver文件"></a>2、编辑regionserver文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">S1 </div><div class="line">S2</div></pre></td></tr></table></figure>
<h2 id="3、编辑hbase-env-xml文件"><a href="#3、编辑hbase-env-xml文件" class="headerlink" title="3、编辑hbase-env.xml文件"></a>3、编辑hbase-env.xml文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/java/jdk1.6.0_26/  </div><div class="line">export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib  </div><div class="line">export PATH=$JAVA_HOME/bin:$PATH:$CATALINA_HOME/bin  </div><div class="line">export HADOOP_HOME=/home/hadoop/hadoop  </div><div class="line">export HBASE_HOME=/home/hadoop/hbase  </div><div class="line">export HBASE_MANAGES_ZK=true </div><div class="line">export PATH=$PATH:/home/hadoop/hbase/bin</div></pre></td></tr></table></figure>
<h2 id="4、复制文件到集群丛机"><a href="#4、复制文件到集群丛机" class="headerlink" title="4、复制文件到集群丛机"></a>4、复制文件到集群丛机</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">scp -r /home/hadoop/hbase s1:/home/hadoop </div><div class="line">scp -r /home/hadoop/hbase s2:/home/hadoop</div></pre></td></tr></table></figure>
<h2 id="5、进入-home-hadoop-zookeeper-conf-中"><a href="#5、进入-home-hadoop-zookeeper-conf-中" class="headerlink" title="5、进入/home/hadoop/zookeeper/conf/中"></a>5、进入<code>/home/hadoop/zookeeper/conf/</code>中</h2><blockquote>
<p>(1)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp zoo_sample.cfg zoo.cfg</div></pre></td></tr></table></figure></p>
<p>(2)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim zoo.cfg</div></pre></td></tr></table></figure></p>
</blockquote>
<p>如下： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"># The number of milliseconds of each tick  </div><div class="line">tickTime=2000 </div><div class="line"># The number of ticks that the initial  </div><div class="line"># synchronization phase can take  </div><div class="line">initLimit=10 </div><div class="line"># The number of ticks that can pass between  </div><div class="line"># sending a request and getting an acknowledgement  </div><div class="line">syncLimit=5 </div><div class="line"># the directory where the snapshot is stored.  </div><div class="line">dataDir=/home/hadoop/zookeeper/data  </div><div class="line"># the port at which the clients will connect  </div><div class="line">clientPort=2181 </div><div class="line">server.1=s1:2888:3888  </div><div class="line">server.2=s2:2888:3888</div></pre></td></tr></table></figure>
<blockquote>
<p>(3)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch myid</div></pre></td></tr></table></figure></p>
</blockquote>
<p>*编辑：1（<u>此序号设置和zoo.cfg里面的server设置要对应</u>)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">scp -r /home/hadoop/zookeeper s1:/home/hadoop </div><div class="line">scp -r /home/hadoop/zookeeper s2:/home/hadoop</div></pre></td></tr></table></figure></p>
<blockquote>
<p>4）在所有的节点执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R hadoop.hadoop /home/hadoop</div></pre></td></tr></table></figure></p>
</blockquote>
<p>启动hbase集群：<br>（1）<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">（2）执行```jps```显示Hmaster是否启动</div><div class="line">（3）执行```bin/hbase shell</div></pre></td></tr></table></figure></p>
<p> (4)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;create &apos;t1&apos; t2&apos;&apos; &apos;t3&apos;#(测试利用hmaster插入数据) </div><div class="line">    &gt;list #（显示已经插入的数据） </div><div class="line">    &gt;t1+t2+t3</div></pre></td></tr></table></figure></p>
<p>输入：<a href="http://master:60010" target="_blank" rel="external">http://master:60010</a> </p>
<p><em>延伸：Hadoop 页面监控信息网址列表</em></p>
<p>将Hadoop中可能用到的网页地址list到下面，方便查阅：</p>
<ol>
<li><a href="http://master:50030" target="_blank" rel="external">http://master:50030</a></li>
</ol>
<p>查看MapReduce上的jobtracker（在启动了hdfs和MapReduce之后查阅）</p>
<ol>
<li><a href="http://master:50060" target="_blank" rel="external">http://master:50060</a> </li>
</ol>
<p>查看MapReduce上的tasktracker（在启动了hdfs和MapReduce之后查阅）</p>
<ol>
<li><a href="http://master:50070" target="_blank" rel="external">http://master:50070</a>  </li>
</ol>
<p>查看HDFS上的节点信息（在启动了HDFS之后查阅）</p>
<ol>
<li><a href="http://master:60010/master.jsp" target="_blank" rel="external">http://master:60010/master.jsp</a></li>
</ol>
<p>查看master连点信息 （在启动了HDFS、MapReduce、ZooKeeper和HBase之后查阅）</p>
<ol>
<li><a href="http://master:60030/regionserver.jsp" target="_blank" rel="external">http://master:60030/regionserver.jsp</a></li>
</ol>
<p>查看regionserver信息（在启动了HDFS、MapReduce、ZooKeeper和HBase之后查阅）</p>
<ol>
<li><a href="http://master:60010/zk.jsp" target="_blank" rel="external">http://master:60010/zk.jsp</a></li>
</ol>
<p>查看zookeeper信息（在启动了HDFS、MapReduce、ZooKeeper和HBase之后查阅）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://archive.apache.org/dist/hadoop/common/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hadoop的下载地址&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://archive.apache.org/dist/hbase/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hbase的下载地址&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://archive.apache.org/dist/hadoop/zookeeper/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zookeeper的下载地址&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;1、-主机配置如下：&quot;&gt;&lt;a href=&quot;#1、-主机配置如下：&quot; class=&quot;headerlink&quot; title=&quot;1、 主机配置如下：&quot;&gt;&lt;/a&gt;1、 主机配置如下：&lt;/h2&gt;&lt;p&gt;（添加到/etc/hosts文件里面）&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;192.168.0.211 master  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#（用于集群主机提供hmaster namenode jobtasker服务 ）  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;192.168.0.212 s1      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#(用于集群丛机提供regionsrever datanode tasktacuter服务)  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;192.168.0.213 s2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="bigdata" scheme="http://blog.fbi.st/categories/bigdata/"/>
    
    
      <category term="Hadoop" scheme="http://blog.fbi.st/tags/Hadoop/"/>
    
      <category term="HBase" scheme="http://blog.fbi.st/tags/HBase/"/>
    
      <category term="大数据" scheme="http://blog.fbi.st/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库优化-总结</title>
    <link href="http://blog.fbi.st/2017/05/20/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96-%E6%80%BB%E7%BB%93/"/>
    <id>http://blog.fbi.st/2017/05/20/MySQL数据库优化-总结/</id>
    <published>2017-05-20T12:07:31.000Z</published>
    <updated>2017-09-14T13:54:52.706Z</updated>
    
    <content type="html"><![CDATA[<p>面试时遇到的问题：千万级的mysql数据库如何优化？<br>作为一个刚入门的phper,遇到这个问题时,我还是压力山大的.还好有一个周末的时间来学习.本文就是这周末三天的整理总结.<br><a id="more"></a></p>
<h2 id="方案一-缓存"><a href="#方案一-缓存" class="headerlink" title="方案一:缓存"></a>方案一:缓存</h2><p>通过redis或memcache,添加缓存服务器.<br>原理:将经常查询的内容自动添加到缓存,访问量低的通过正常查询获得,可以让绝大多数的内容从内存中自动访问.</p>
<blockquote>
<p>ridis和memcache的区别:</p>
</blockquote>
<p>1 Redis不仅仅支持简单的k/v类型的数据，同时还提供list，set，hash等数据结构的存储。</p>
<p>2 Redis支持数据的备份，即master-slave模式的数据备份。</p>
<p>3 Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。</p>
<h2 id="方案二-添加索引"><a href="#方案二-添加索引" class="headerlink" title="方案二:添加索引"></a>方案二:添加索引</h2><p>通过对常用字段添加索引的办法可以极大的提高查询的效率.<br>注意事项:</p>
<ol>
<li><p>首先应考虑在 where 及 order by 涉及的列上建立索引。///禁用排名,<code>oder by null</code></p>
</li>
<li><p>可以在 num 上设置默认值 0,确保表中 num 列没有 null 值。</p>
</li>
<li><p>不要写一些没有意义的查询.</p>
</li>
<li><p>用 exists 代替 in 是一个好的选择.如:</p>
<blockquote>
<p>select num from a where num in(select num from b);<br>可以用<br>select num from a where exists(select 1 from b where num=a.num);<br>来代替.</p>
</blockquote>
</li>
<li><p>索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过 6 个，若太多则应考虑一些不常使用到的列上建的索引是否有必要。</p>
</li>
<li><p>尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能,并增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言 只需要比较一次就够了。</p>
</li>
</ol>
<ol>
<li>尽可能的使用 <code>varchar/nvarchar</code>代替 <code>char/nchar</code>, 因为首先变长字段存储空间小， 可以节省存储空间， 其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。</li>
</ol>
<ol>
<li>不要使用 <code>select * from t</code>,用具体的字段列表代替“*”,不要返回用不到的任何字段。</li>
</ol>
<h4 id="避免全表扫描"><a href="#避免全表扫描" class="headerlink" title="避免全表扫描:"></a>避免全表扫描:</h4><ul>
<li><p>避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描。</p>
</li>
<li><p><code>select id from t where name like &#39;%c%&#39;;</code>也将导致全表扫描。</p>
</li>
<li><p>如果在 where 子句中使用参数，也会导致全表扫描.如:<code>select id from t where num=@num ;</code>可以改为强制查询使用索引:<code>select id from t with(index(索引名)) where num=@num ;</code></p>
</li>
<li><p>在 where 子句中对字段进行表达式操作， 这将导致引擎放弃使用索引而进行全表扫描。如:<code>select id from t where num/2=100;</code></p>
</li>
<li><p>在 where 子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：<code>select id from t where substring(name,1,3)=&#39;abc&#39;;#name 以 abc 开头的 id</code></p>
</li>
</ul>
<h2 id="方案三-水平分库-分表"><a href="#方案三-水平分库-分表" class="headerlink" title="方案三:水平分库/分表"></a>方案三:水平分库/分表</h2><p>原理:<br>一个1000多万条记录的用户表user,查询起来非常之慢，分表的做法是将其散列到100个表中，分别从user_0到user_99，然后根据userId分发记录到这些表中.</p>
<h2 id="方案四-Sphinx等索引工具"><a href="#方案四-Sphinx等索引工具" class="headerlink" title="方案四:Sphinx等索引工具"></a>方案四:Sphinx等索引工具</h2><p>原理:<br>Sphinx工具是一个基于SQL的索引检索引擎.原理是将SQL中的数据建立索引,php通过API的方式从Sphinx中获得检索的值.php不直接通过mysql取值.</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2229907-552a7cc0a9351d0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Sphinx的原理图"></p>
<h3 id="Sphinx的特性（优、缺点）"><a href="#Sphinx的特性（优、缺点）" class="headerlink" title="Sphinx的特性（优、缺点）"></a>Sphinx的特性（优、缺点）</h3><h4 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h4><ul>
<li>高速索引 (在新款CPU上,近10 MB/秒);  </li>
<li>高速搜索 (2-4G的文本量中平均查询速度不到0.1秒);  </li>
<li>高可用性 (单CPU上最大可支持100 GB的文本,100M文档);</li>
<li>提供良好的相关性排名</li>
<li>支持分布式搜索;</li>
<li>提供文档摘要生成;</li>
<li>提供从MySQL内部的插件式存储引擎上搜索</li>
<li>支持布尔,短语, 和近义词查询;</li>
<li>支持每个文档多个全文检索域(默认最大32个);</li>
<li>支持每个文档多属性;</li>
<li>支持断词;</li>
<li>支持单字节编码与UTF-8编码;</li>
<li>支持多字段的检索域</li>
<li>支持MySQL（MYISAM和INNODB）和Postgres数据库</li>
<li>支持windows, linux, unix, mac等平台</li>
</ul>
<h4 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h4><ul>
<li>必须要有主键</li>
<li>主键必须为整型</li>
<li>不负责数据存储</li>
<li>配置不灵活</li>
</ul>
<h2 id="方案五-读写分离"><a href="#方案五-读写分离" class="headerlink" title="方案五:读写分离"></a>方案五:读写分离</h2><p>原理：<br>通过物理的方式来提升mysql的性能.<br>…未完待续</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;面试时遇到的问题：千万级的mysql数据库如何优化？&lt;br&gt;作为一个刚入门的phper,遇到这个问题时,我还是压力山大的.还好有一个周末的时间来学习.本文就是这周末三天的整理总结.&lt;br&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://blog.fbi.st/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Mysql" scheme="http://blog.fbi.st/tags/Mysql/"/>
    
      <category term="数据库" scheme="http://blog.fbi.st/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch非权威指南，写在开始的话</title>
    <link href="http://blog.fbi.st/2017/05/20/%E5%86%99%E5%9C%A8%E5%BC%80%E5%A7%8B%E7%9A%84%E8%AF%9D/"/>
    <id>http://blog.fbi.st/2017/05/20/写在开始的话/</id>
    <published>2017-05-20T12:07:31.000Z</published>
    <updated>2017-06-25T10:20:59.462Z</updated>
    
    <content type="html"><![CDATA[<p>打算了好久，《elasticsearch非权威指南》今天终于开始写了。</p>
<p>距离开始接触elasticsearch到今天开始写这个笔记有半年多了。从开始的完全蒙圈到现在的懵懵懂懂。踩过N多的坑。开始写这个《指南》主要有下面几个原因：<br><a id="more"></a></p>
<p>##一、能帮到一些开始学习ES的人</p>
<p>首先，我自己是一个人独自的百度、google学习过来的。es是一个比较新的东西，网上的中文资料很有限。而且本人是做php开发的，es是基于lucene的，是用java开发的，所以php的资料就更少了。</p>
<p>在学习的过程中我真的是爬过超多的坑，所以希望记录下这些“坑”，能帮助一些开始学习ES的人，后面的人少跳一些坑，我自己也希望有个人能在我跳坑之前提醒我，虽然都已经过去了。</p>
<p>##二、希望帮助自己理清学到的东西</p>
<p>我开始写这个《指南》并不是说我现在玩ES玩得多好，相反，我的对ES的了解才刚刚开始。<strong>我希望通过写下笔记的形式理清自己的知识节点。</strong>将之前学到的东西串起来，看自己哪有漏洞，再去边补边写。所以，这个《指南》肯定有很多的错误的和不足，希望发现的朋友能帮忙指出，不胜感激。</p>
<p>也是因为本人目前技术有限的原因，本笔记的内容也写不了很深入，我自己yy的认为，这可能会让这个《指南》更加”亲民易懂“，更适合新人。</p>
<p>##三、感谢在我学习过程中帮助过我的朋友。</p>
<p>学习过程中我遇到许多的问题，很多问题度娘和gg都找不到，所以只能求助万能的群有和论坛的朋友。过程中，很多朋友帮我解答过很多的问题。</p>
<p>每次我的问题得到解答的时候，我都暗暗的告诉自己，<strong>这是一种”接力“，当我得到答案的时候，就是我拿到“接力棒”的时候，我有义务将“它”，传下去。</strong>所以遇到我能解决的问题，我一定乐意去帮别人解决。我将这当做感谢那些帮助过我的人的方式。</p>
<hr>
<blockquote>
<p><strong>关于笔记的几点说明：</strong></p>
</blockquote>
<ul>
<li><p>由于本人对php比较熟悉，但在学习es的过程中顺便学了点java，所以关于涉及到代码的地方，我会用curl、php和java三种方式实现（特殊情况特殊说明）。</p>
</li>
<li><p>对于ES本人也是新手，所以笔记会不断的完善。</p>
</li>
<li><p>整个《指南》肯定会涉及到一些其他地方找到的资料，我会尽量的表明出处，如果有遗漏，有侵权的，请提醒，一定及时删改。</p>
</li>
</ul>
<p><em><a href="http://www.jianshu.com/p/ede55b4110b1" target="_blank" rel="external">《elasticsearch非权威指南》目录</a></em><br><em>本笔记欢迎转载，欢迎分享，转载分享不用通知作者。不过，如果可以的话希望能注明出处，看完文章还能点个赞。</em></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;打算了好久，《elasticsearch非权威指南》今天终于开始写了。&lt;/p&gt;
&lt;p&gt;距离开始接触elasticsearch到今天开始写这个笔记有半年多了。从开始的完全蒙圈到现在的懵懵懂懂。踩过N多的坑。开始写这个《指南》主要有下面几个原因：&lt;br&gt;
    
    </summary>
    
      <category term="Elasticsearch非权威指南" scheme="http://blog.fbi.st/categories/Elasticsearch%E9%9D%9E%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.fbi.st/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Python，Re模块的学习</title>
    <link href="http://blog.fbi.st/2017/05/20/Python%EF%BC%8CRe%E6%A8%A1%E5%9D%97%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <id>http://blog.fbi.st/2017/05/20/Python，Re模块的学习/</id>
    <published>2017-05-20T12:07:31.000Z</published>
    <updated>2017-06-25T09:50:27.310Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-概念："><a href="#1-概念：" class="headerlink" title="1.概念："></a>1.概念：</h2><p>正则表达式（或 RE）是一种小型的、高度专业化的编程语言，在Python中）它内嵌在Python中，并通过 re 模块实现。<br>使用这个小型语言，你可以为想要匹配的相应字符串集指定规则；<br>该字符串集可能包含英文语句、email、地址、TeX命令或任何你想搞定的东西。<br>然后你可以问诸如“这个字符串匹配该模式吗？”或“在这个字符串中是否有部分匹配该模式呢？”。<br>你也可以使用 RE以各种方式来修改或分割字符串。正则表达式语言相对小型和受限（功能有限），<br>因此并非所有字符串处理都能用正则表达式完成。<br>当然也有些任务可以用正则表达式完成，不过最终表达式会变得异常复杂。<br>碰到这些情形时，编写 Python 代码进行处理可能反而更好；<br>尽管Python 代码比一个精巧的正则表达式要慢些，但它更易理解。<br><a id="more"></a></p>
<h2 id="2-在正则表达式中，-如下的字符是具有特殊含义的"><a href="#2-在正则表达式中，-如下的字符是具有特殊含义的" class="headerlink" title="2.在正则表达式中， 如下的字符是具有特殊含义的"></a>2.在正则表达式中， 如下的字符是具有特殊含义的</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">. (所有字符)  ^  $  *(0-N次)  +(1-N次)  ? (0-1次) &#123; &#125; [  ]  \  |  ( )</div></pre></td></tr></table></figure>
<p>1).”[“ 和 “]”。它们常用来指定一个字符类别，所谓字符类别就是你想匹配的一个字符集</p>
<p>2).其它地方的”^”只会简单匹配 “^”字符本身。例[^5] 将匹配除 “5” 之外的任意字符。</p>
<p>3).反斜杠后面可以加不同的字符以表示不同特殊意义。它也可以用于取消所有的元字符</p>
<h2 id="3-RE-函数用法"><a href="#3-RE-函数用法" class="headerlink" title="3.RE 函数用法:"></a>3.RE 函数用法:</h2><p>   findall(rule , target [,flag] ) 在目标字符串中查找符合规则的字符串。<br>   match() 决定 RE 是否在字符串刚开始的位置匹配<br>   search() 扫描字符串，找到这个 RE 匹配的位置<br>   findall() 找到 RE 匹配的所有子串，并把它们作为一个列表返回<br>   finditer() 找到 RE 匹配的所有子串，并把它们作为一个迭代器返回<br>   group() 返回被 RE 匹配的字符串<br>   start() 返回匹配开始的位置<br>   end() 返回匹配结束的位置<br>   span() 返回一个元组包含匹配 (开始,结束) 的位置<br>   compile( rule [,flag] )将正则规则编译成一个Pattern对象，以供接下来使用第一个参数是规则式，第二个参数是规则选项。(使用compile加速)</p>
<h2 id="4-含义"><a href="#4-含义" class="headerlink" title="4 : 含义:"></a>4 : 含义:</h2><pre><code>预定义转义字符集： “\d”  “\w” “\s” 等等，它们是以字符’\’开头，后面接一个特定字符的形式,用来指示一个预定义好的含义

‘^’  和’$’ 匹配字符串开头和结尾
‘.’    匹配所有字符 除\n以外
‘\d’  匹配数字
‘\D’  匹配非数字
‘\w’  匹配字母和数字
‘\W’  匹配非英文字母和数字
‘\s’   匹配间隔符
‘\S’   匹配非间隔符
‘\A’  匹配字符串开头
‘\Z’  匹配字符串结尾
‘\b’  只用以匹配单词的词首和词尾。单词被定义为一个字母数字序列，因此词尾就是用空白符或非字母数字符来标示的。(退格)
‘\B’，它正好同 \b 相反，只在当前位置不在单词边界时匹配。
</code></pre><h2 id="5-前向界定与后向界定"><a href="#5-前向界定与后向界定" class="headerlink" title="5.前向界定与后向界定:"></a>5.前向界定与后向界定:</h2><pre><code>‘(?&lt;=…)’ 前向界定:括号中’…’代表你希望匹配的字符串的前面应该出现的字符串。
‘(?=…)’后向界定    :括号中的’…’代表你希望匹配的字符串后面应该出现的字符串
‘(?&lt;!..)’前向非界定 :只有当你希望的字符串前面不是’…’的内容时才匹配
‘(?!...)’后向非界定  :只有当你希望的字符串后面不跟着’…’内容时才匹配。
</code></pre><h2 id="6-组的基本知识"><a href="#6-组的基本知识" class="headerlink" title="6.组的基本知识:"></a>6.组的基本知识:</h2><pre><code>‘(‘’)’          无命名组                    [a-z]+(\d+)[a-z]+
‘(?P&lt;name&gt;…)’    命名组                    (?P&lt;g1&gt;[a-z]+)\d+(?P=g1)
‘(?P=name)’    调用已匹配的命名组
‘\number’     通过序号调用已匹配的组正则式中的每个组都有一个序号，序号是按组从左到右，从1开始的数字，你可以通过下面的形式来调用已匹配的组 ( r&quot;(\d+)([a-z]+)(\d+)(\2)(\1)&quot; )  
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"># -*- coding:UTF8 -*- </div><div class="line">import sys</div><div class="line">reload(sys)</div><div class="line">sys.setdefaultencoding(&apos;utf-8&apos;)</div><div class="line"></div><div class="line">import rhinoscriptsyntax as rs</div><div class="line"># 正则表达式</div><div class="line">import re</div><div class="line">str1 = &quot;abc \\ 123 456&quot;</div><div class="line">print re.findall(&quot;\\\\&quot;,str1)  # 不用r和用r的区</div><div class="line">print re.findall(r&quot;\d\Z&quot;,str1) # 用&quot;r&quot;来定义规则字符串</div><div class="line"></div><div class="line">p = re.compile(&apos;(a)b&apos;)</div><div class="line">m = p.match(&apos;ab&apos;)</div><div class="line">print m.group()</div><div class="line"></div><div class="line">s = &quot;aaa1 22 gg 333 ccc 4444 pppp 55555 666&quot;</div><div class="line">print re.findall(r&quot;\b\d&#123;3&#125;\b&quot;,s)</div><div class="line">print re.findall(r&quot;\b\d&#123;2,4&#125;\b&quot;,s)</div><div class="line"></div><div class="line">s2 = &quot;aaa111aaa , bbb222 , 333ccc&quot;</div><div class="line">print re.findall( r&quot;(?&lt;=[a-z]+)\d+(?=[a-z]+)&quot;,s2 )</div><div class="line">print re.findall( r&quot;\d+(?=[a-z]+)&quot;,s2 )</div><div class="line">## 目标 前面是a-z 1-多次、中间数字1-9 1-多次</div><div class="line">print re.findall(r&quot;\d+(?!\w+)&quot;,s2)</div><div class="line">#无命名组</div><div class="line">print re.findall(r&quot;[a-z]+(\d+)[a-z]+&quot;,s2) # 只返回()里面的</div><div class="line">s3 = &apos;aaa111aaa,bbb222,333ccc,444ddd444,555eee666,fff777ggg,hhh888hhh&apos;</div><div class="line">print re.findall(r&quot;([a-z]+)\d+([a-z]+)&quot;,s3) #返回括号里面的</div><div class="line">#‘(?P&lt;name&gt;…)’ 命名组</div><div class="line">print re.findall( r&quot;(?P&lt;g1&gt;[a-z]+)\d+(?P=g1)&quot;,s3 ) #找出被中间夹有数字的前后同样的字母</div><div class="line">print re.findall(r&quot;([a-z]+)\d+\1&quot;,s3)</div><div class="line">s4 = &quot;111aaa222aaa111,333bbb444bb33&quot;</div><div class="line">print re.findall( r&quot;(\d+)([a-z]+)(\d+)(\2)(\1)&quot;, s4 ) #数字、字母、数字、字母、数字相对称</div><div class="line">print re.compile(r&quot;(\d+)([a-z]+)(\d+)(\2)(\1)&quot;).findall(s4)</div><div class="line"></div><div class="line">#compile( rule [,flag] ) 使用compile加速</div><div class="line">s5 = &quot;111,222,aaa,bbb,ccc333,444ddd&quot;</div><div class="line">print re.compile(r&quot;\d+\b&quot;).findall(s5) # \退格 匹配一个位于开头的数字，没有使用M选项</div><div class="line"></div><div class="line">s6 = &quot;123 456\n789 012\n345 678&quot;</div><div class="line">print re.compile(r&quot;^\d+&quot;,re.M).findall(s6) # 匹配位于(M/多行)开头的数字</div><div class="line"></div><div class="line">rcm=re.compile(r&quot;\d+$&quot;)# 对于’$’来说，没有使用M选项，它将匹配最后一个行尾的数字，即’678’，加上以后，就能匹配三个行尾的数字456 012和678了.</div><div class="line">print re.compile(r&quot;\d+$&quot;,re.M).findall(s6) #</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-概念：&quot;&gt;&lt;a href=&quot;#1-概念：&quot; class=&quot;headerlink&quot; title=&quot;1.概念：&quot;&gt;&lt;/a&gt;1.概念：&lt;/h2&gt;&lt;p&gt;正则表达式（或 RE）是一种小型的、高度专业化的编程语言，在Python中）它内嵌在Python中，并通过 re 模块实现。&lt;br&gt;使用这个小型语言，你可以为想要匹配的相应字符串集指定规则；&lt;br&gt;该字符串集可能包含英文语句、email、地址、TeX命令或任何你想搞定的东西。&lt;br&gt;然后你可以问诸如“这个字符串匹配该模式吗？”或“在这个字符串中是否有部分匹配该模式呢？”。&lt;br&gt;你也可以使用 RE以各种方式来修改或分割字符串。正则表达式语言相对小型和受限（功能有限），&lt;br&gt;因此并非所有字符串处理都能用正则表达式完成。&lt;br&gt;当然也有些任务可以用正则表达式完成，不过最终表达式会变得异常复杂。&lt;br&gt;碰到这些情形时，编写 Python 代码进行处理可能反而更好；&lt;br&gt;尽管Python 代码比一个精巧的正则表达式要慢些，但它更易理解。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://blog.fbi.st/categories/Python/"/>
    
    
      <category term="Python" scheme="http://blog.fbi.st/tags/Python/"/>
    
      <category term="正则表达式" scheme="http://blog.fbi.st/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>基本的shell操作HBase</title>
    <link href="http://blog.fbi.st/2017/05/20/%E5%9F%BA%E6%9C%AC%E7%9A%84shell%E6%93%8D%E4%BD%9CHBase/"/>
    <id>http://blog.fbi.st/2017/05/20/基本的shell操作HBase/</id>
    <published>2017-05-20T12:07:31.000Z</published>
    <updated>2017-06-25T10:28:18.566Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-进入hbase-shell-console"><a href="#1-进入hbase-shell-console" class="headerlink" title="1.进入hbase shell console"></a><strong>1.进入hbase shell console</strong></h2><blockquote>
<figure class="highlight plain"><figcaption><span>shell```如果有kerberos认证，需要事先使用相应的keytab进行一下认证（使用kinit命令），认证成功之后再使用hbase shell进入可以使用``whoami``命令可查看当前用户</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">```</div><div class="line">hbase(main) &gt; whoami</div></pre></td></tr></table></figure>
</blockquote>
<a id="more"></a>
<h2 id="2表的管理"><a href="#2表的管理" class="headerlink" title="2表的管理"></a><strong>2表的管理</strong></h2><blockquote>
<p>1）查看有哪些表hbase(main)&gt; list</p>
<p>2）创建表<br><em>语法</em>：<br><figure class="highlight plain"><figcaption><span><table>, &#123;NAME => <family>, VERSIONS => <versions>&#125;```</versions></family></table></span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例如：创建表t1，有两个family name：f1，f2，且版本数均为2</div></pre></td></tr></table></figure></p>
</blockquote>
<p>hbase(main)&gt; create ‘t1’,<br>{NAME =&gt;’f1’, VERSIONS =&gt; 2},<br>{NAME =&gt;’f2’ , VERSIONS =&gt; 2}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; 3）删除表</div><div class="line">分两步：首先disable，然后drop</div><div class="line">例如：删除表t1</div></pre></td></tr></table></figure></p>
<p>hbase(main)&gt; disable ‘t1’<br>hbase(main)&gt; drop ‘t1’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; 4）查看表的结构</div><div class="line">*语法*：``describe &lt;table&gt;``</div><div class="line">例如：查看表t1的结构</div></pre></td></tr></table></figure></p>
<p>hbase(main)&gt; describe ‘t1’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; 5）修改表结构修改表结构必须先disable</div><div class="line">*语法*：``alter &apos;t1&apos;, &#123;NAME =&gt; &apos;f1&apos;&#125;, &#123;NAME =&gt; &apos;f2&apos;, METHOD =&gt; &apos;delete&apos;&#125;``</div><div class="line">例如：修改表test1的cf的TTL为180天</div></pre></td></tr></table></figure></p>
<p>hbase(main)&gt; disable ‘test1’<br>hbase(main)&gt; alter ‘test1’<br>,{NAME=&gt;’body’ ,TTL=&gt;’15552000’}<br>,{NAME=&gt;’meta’, TTL=&gt;’15552000’}<br>hbase(main)&gt;enable ‘test1’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## **3.权限管理**</div><div class="line">&gt; 1）分配权限# 语法 : grant &lt;user&gt; &lt;permissions&gt; &lt;table&gt; &lt;column family&gt; &lt;column qualifier&gt; 参数后面用逗号分隔</div><div class="line">**权限**用五个字母表示： &quot;RWXCA&quot;.</div><div class="line">```READ(&apos;R&apos;), WRITE(&apos;W&apos;), EXEC(&apos;X&apos;), CREATE(&apos;C&apos;), ADMIN(&apos;A&apos;)</div></pre></td></tr></table></figure></p>
<p>例如，给用户‘test’分配对表t1有读写的权限，<br><figure class="highlight plain"><figcaption><span>grant 'test' , 'RW' , 't1' ```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt; 2）查看权限</div><div class="line">*语法*：``user_permission &lt;table&gt;``</div><div class="line">例如，查看表t1的权限列表</div><div class="line">```hbase(main)&gt; user_permission &apos;t1&apos;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>3）收回权限<br>与分配权限类似,<br><em>语法</em>：<figure class="highlight plain"><figcaption><span><user> <table> <column family=""> <column qualifier="">```</column></column></table></user></span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例如，收回test用户在表t1上的权限</div></pre></td></tr></table></figure></p>
</blockquote>
<p>hbase(main)&gt; revoke ‘test’ , ‘t1’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## **4.表数据的增删改查**</div><div class="line">&gt; 1）添加数据</div><div class="line">语法：``put &lt;table&gt;,&lt;rowkey&gt;,&lt;family:column&gt;,&lt;value&gt;,&lt;timestamp&gt;``</div><div class="line">例如：给表t1的添加一行记录：rowkey是rowkey001，family name：f1，column name：col1，value：value01，timestamp：系统默认</div></pre></td></tr></table></figure></p>
<p>hbase(main)&gt; put ‘t1’ ,<br> ‘rowkey001’ ,<br> ‘f1:col1’, ‘value01’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">用法比较单一。</div><div class="line">&gt; 2）查询数据</div><div class="line">a）查询某行记录</div><div class="line">*语法*：``get &lt;table&gt;,&lt;rowkey&gt;,[&lt;family:column&gt;,....]``</div><div class="line">例如：查询表t1，rowkey001中的f1下的col1的值</div></pre></td></tr></table></figure></p>
<p>hbase(main)&gt; get ‘t1’,<br>‘rowkey001’ , ‘f1:col1’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">或者：</div></pre></td></tr></table></figure></p>
<p>hbase(main)&gt; get ‘t1’ , ‘rowkey001’ ,<br>{COLUMN=&gt;’f1:col1’}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">查询表t1，rowke002中的f1下的所有列值</div></pre></td></tr></table></figure></p>
<p>hbase(main)&gt; get ‘t1’,’rowkey001’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">b）扫描表</div><div class="line">*语法*：``scan &lt;table&gt;, &#123;COLUMNS =&gt; [ &lt;family:column&gt;,.... ], LIMIT =&gt; num&#125;``</div><div class="line">另外，还可以添加STARTROW、TIMERANGE和FITLER等高级功能</div><div class="line">例如：扫描表t1的前5条数据</div></pre></td></tr></table></figure></p>
<p>hbase(main)&gt; scan ‘t1’ , {LIMIT=&gt;5}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">c）查询表中的数据行数</div><div class="line">*语法*：```count &lt;table&gt;, &#123;INTERVAL =&gt; intervalNum, CACHE =&gt; cacheNum&#125;</div></pre></td></tr></table></figure></p>
<p>INTERVAL设置多少行显示一次及对应的rowkey，默认1000；CACHE每次去取的缓存区大小，默认是10，调整该参数可提高查询速度.<br>例如，查询表t1中的行数，每100条显示一次，缓存区为500<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hbase(main)&gt; count &apos;t1&apos;,</div><div class="line">&#123;INTERVAL =&gt; 100, CACHE =&gt; 500&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>3）删除数据<br>a )删除行中的某个列值<br><em>语法</em>：<code>delete &lt;table&gt;, &lt;rowkey&gt;,  &lt;family:column&gt; , &lt;timestamp&gt;</code>,必须指定列名<br>例如：删除表t1，rowkey001中的f1:col1的数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hbase(main)&gt; delete &apos;t1&apos; ,</div><div class="line">&apos;rowkey001&apos; ,&apos;f1:col1&apos;</div></pre></td></tr></table></figure></p>
</blockquote>
<p>注：将删除改行f1:col1列所有版本的数据<br>b )删除行<br><em>语法</em>：<figure class="highlight plain"><figcaption><span><table>, <rowkey>,  <family:column> , <timestamp>```，可以不指定列名，删除整行数据</timestamp></family:column></rowkey></table></span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例如：删除表t1，rowk001的数据</div></pre></td></tr></table></figure></p>
<p>hbase(main)&gt; deleteall ‘t1’,’rowkey001’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">c）删除表中的所有数据</div><div class="line">*语法*： ``truncate &lt;table&gt;``</div><div class="line">其具体过程是：``disable table -&gt; drop table -&gt; create table``</div><div class="line">例如：删除表t1的所有数据</div></pre></td></tr></table></figure></p>
<p>hbase(main)&gt; truncate ‘t1’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## **5.Region管理**</div><div class="line">&gt; 1）移动region</div><div class="line">*语法*:``move &apos;encodeRegionName&apos;, &apos;ServerName&apos;``</div><div class="line">``encodeRegionName``指的``regioName``后面的编码，``ServerName``指的是``master-status``的``Region Servers``列表</div><div class="line">示例</div></pre></td></tr></table></figure></p>
<p>hbase(main)&gt;move<br>‘4343995a58be8e5bbc739af1e91cd72d’ ,<br>‘db-41.xxx.xxx.org,60020,1390274516739’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; 2）开启/关闭region</div><div class="line">*语法*：``balance_switch true|false``</div></pre></td></tr></table></figure></p>
<p>hbase(main)&gt; balance_switch<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt; 3）手动split</div><div class="line">*语法*：``split &apos;regionName&apos;, &apos;splitKey&apos;``</div><div class="line"></div><div class="line">&gt; 4）手动触发major compaction</div><div class="line">*语法*：``Compact all regions in a table:``</div></pre></td></tr></table></figure></p>
<p>hbase&gt; major_compact ‘t1’<br>Compact an entire region:<br>hbase&gt; major_compact ‘r1’<br>Compact a single column family within a region:<br>hbase&gt; major_compact ‘r1’, ‘c1’<br>Compact a single column family within a table:<br>hbase&gt; major_compact ‘t1’, ‘c1’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">## **6.配置管理及节点重启**</div><div class="line">&gt; 1）修改hdfs配置hdfs配置位置：</div></pre></td></tr></table></figure></p>
<p>/etc/hadoop/conf<br><code>`
 同步hdfs配置</code><br>cat /home/hadoop/slaves | xargs -i -t scp /etc/hadoop/conf/hdfs-site.xml hadoop@{}: /etc/hadoop/conf/hdfs-site.xml<code>关闭：</code><br>cat /home/hadoop/slaves | xargs -i -t ssh hadoop@{} “sudo /home/hadoop/cdh4/hadoop-2.0.0-cdh4.2.1/sbin/hadoop-daemon.sh –config /etc/hadoop/conf stop datanode”<br><code>启动：</code>cat /home/hadoop/slaves | xargs -i -t ssh hadoop@{} “sudo /home/hadoop/cdh4/hadoop-2.0.0-cdh4.2.1/sbin/hadoop-daemon.sh –config /etc/hadoop/conf start datanode”<br>``</p>
<blockquote>
<p>2）修改hbase配置hbase配置位置：<br>同步hbase配置<br><code>cat /home/hadoop/hbase/conf/regionservers | xargs -i -t scp /home/hadoop/hbase/conf/hbase-site.xml hadoop@{}:/home/hadoop/hbase/conf/hbase-site.xml</code><br>graceful重启<br><code>cd ~/hbase
bin/graceful_stop.sh --restart --reload --debug inspurXXX.xxx.xxx.org</code></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-进入hbase-shell-console&quot;&gt;&lt;a href=&quot;#1-进入hbase-shell-console&quot; class=&quot;headerlink&quot; title=&quot;1.进入hbase shell console&quot;&gt;&lt;/a&gt;&lt;strong&gt;1.进入hbase shell console&lt;/strong&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;shell```如果有kerberos认证，需要事先使用相应的keytab进行一下认证（使用kinit命令），认证成功之后再使用hbase shell进入可以使用``whoami``命令可查看当前用户&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;```&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hbase(main) &amp;gt; whoami&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://blog.fbi.st/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Hadoop" scheme="http://blog.fbi.st/tags/Hadoop/"/>
    
      <category term="HBase" scheme="http://blog.fbi.st/tags/HBase/"/>
    
      <category term="大数据" scheme="http://blog.fbi.st/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="数据库" scheme="http://blog.fbi.st/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="shell" scheme="http://blog.fbi.st/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>11个提问频率最高的PHP面试题</title>
    <link href="http://blog.fbi.st/2017/05/20/11%E4%B8%AA%E6%8F%90%E9%97%AE%E9%A2%91%E7%8E%87%E6%9C%80%E9%AB%98%E7%9A%84PHP%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>http://blog.fbi.st/2017/05/20/11个提问频率最高的PHP面试题/</id>
    <published>2017-05-20T12:07:31.000Z</published>
    <updated>2017-12-29T14:34:56.833Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题：请用最简单的语言告诉我PHP是什么？"><a href="#问题：请用最简单的语言告诉我PHP是什么？" class="headerlink" title="问题：请用最简单的语言告诉我PHP是什么？"></a>问题：请用最简单的语言告诉我PHP是什么？</h3><p>回答：PHP全称：Hypertext Preprocessor，是一种用来开发动态网站的服务器脚本语言。<br><a id="more"></a></p>
<h3 id="问题：什么是MVC？"><a href="#问题：什么是MVC？" class="headerlink" title="问题：什么是MVC？"></a>问题：什么是MVC？</h3><p>回答：MVC由Model（模型）, View（视图）和Controller（控制器）组成，PHP MVC可以更高效地管理好3个不同层的PHP代码。<br><strong>Model</strong>：数据信息存取层。<br><strong>View</strong>：view层负责将应用的数据以特定的方式展现在界面上。<br><strong>Controller</strong>：通常控制器负责从视图读取数据，控制用户输入，并向模型发送数据。</p>
<h3 id="问题：在页面中引用CSS有几种方式？"><a href="#问题：在页面中引用CSS有几种方式？" class="headerlink" title="问题：在页面中引用CSS有几种方式？"></a>问题：在页面中引用CSS有几种方式？</h3><p>回答：在页面中使用CSS有3中方式：<br>引用外部CSS文件<br>内部定义Style样式<br>内联样式</p>
<h3 id="问题：PHP支持多继承吗？"><a href="#问题：PHP支持多继承吗？" class="headerlink" title="问题：PHP支持多继承吗？"></a>问题：PHP支持多继承吗？</h3><p>回答：不可以。PHP类只能继承一个父类，并用关键字“extends”标识。</p>
<h3 id="问题：请问PHP中echo和print有什么区别？"><a href="#问题：请问PHP中echo和print有什么区别？" class="headerlink" title="问题：请问PHP中echo和print有什么区别？"></a>问题：请问PHP中echo和print有什么区别？</h3><p>这两个看起来很相似，因为它们都是将一些值打印在屏幕上。但是echo和print的本质区别在于：echo用来输出字符串，显示多个值的时候可以用逗号隔开。只支持基本类型，print不仅可以打印字符串值，而且可以打印函数的返回值。</p>
<h3 id="问题：请问GET和POST方法有什么区别？"><a href="#问题：请问GET和POST方法有什么区别？" class="headerlink" title="问题：请问GET和POST方法有什么区别？"></a>问题：请问GET和POST方法有什么区别？</h3><p>回答：我们再网页上填写的表单信息都可以通过这两个方法将数据传递到服务器上，当我们使用GET方法是，所有的信息都会出现在URL地址中，并且使用GET方法最多只能传递1024个字符，所以如果在传输量小或者安全性不那么重要的情况下可以使用GET方法。说到POST方法，最多可以传输2MB字节的数据，而且可以根据需要调节。</p>
<h3 id="问题：PHP中获取图像尺寸大小的方法是什么？"><a href="#问题：PHP中获取图像尺寸大小的方法是什么？" class="headerlink" title="问题：PHP中获取图像尺寸大小的方法是什么？"></a>问题：PHP中获取图像尺寸大小的方法是什么？</h3><p>回答：getimagesize () 获取图片的尺寸<br>Imagesx () 获取图片的宽度<br>Imagesy () 获取图片的高度</p>
<h3 id="问题：PHP中的PEAR是什么？"><a href="#问题：PHP中的PEAR是什么？" class="headerlink" title="问题：PHP中的PEAR是什么？"></a>问题：PHP中的PEAR是什么？</h3><p>回答：PEAR也就是为PHP扩展与应用库（PHP Extension and Application Repository），它是一个PHP扩展及应用的一个代码仓库。</p>
<h3 id="问题：如何用PHP和MySQL上传视频？"><a href="#问题：如何用PHP和MySQL上传视频？" class="headerlink" title="问题：如何用PHP和MySQL上传视频？"></a>问题：如何用PHP和MySQL上传视频？</h3><p>回答：我们可以在数据库中存放视频的地址，而不需要将真正的视频数据存在数据库中。可以将视频数据存放在服务器的指定文件夹下，上传的默认大小是2MB，但是我们也可以在php.ini文件中修改max_file size选项来改变。</p>
<h3 id="问题：PHP中的错误类型有哪些？"><a href="#问题：PHP中的错误类型有哪些？" class="headerlink" title="问题：PHP中的错误类型有哪些？"></a>问题：PHP中的错误类型有哪些？</h3><p>回答：PHP中遇到的错误类型大致有3类。<br><strong>提示</strong>：这都是一些非常正常的信息，而非重大的错误，有些甚至不会展示给用户。比如访问不存在的变量。<br><strong>警告</strong>：这是有点严重的错误，将会把警告信息展示给用户，但不会影响代码的输出，比如包含一些不存在的文件。<br><strong>错误</strong>：这是真正的严重错误，比如访问不存在的PHP类。</p>
<p>###问题：如何在PHP中定义常量？<br>回答：PHP中使用Define () 来定义常量。<br>define (“Newconstant”, 30);</p>
<p>###问题：如何不使用submit按钮来提交表单？<br>如果我们不想用submit按钮来提交表单，我们也可以用超链接来提交，我们可以这样写代码：</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题：请用最简单的语言告诉我PHP是什么？&quot;&gt;&lt;a href=&quot;#问题：请用最简单的语言告诉我PHP是什么？&quot; class=&quot;headerlink&quot; title=&quot;问题：请用最简单的语言告诉我PHP是什么？&quot;&gt;&lt;/a&gt;问题：请用最简单的语言告诉我PHP是什么？&lt;/h3&gt;&lt;p&gt;回答：PHP全称：Hypertext Preprocessor，是一种用来开发动态网站的服务器脚本语言。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://blog.fbi.st/categories/PHP/"/>
    
    
      <category term="php" scheme="http://blog.fbi.st/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>WinSCP连接linux遇到的一个小问题</title>
    <link href="http://blog.fbi.st/2017/05/20/WinSCP%E8%BF%9E%E6%8E%A5linux%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    <id>http://blog.fbi.st/2017/05/20/WinSCP连接linux遇到的一个小问题/</id>
    <published>2017-05-20T12:07:31.000Z</published>
    <updated>2017-06-25T10:27:58.129Z</updated>
    
    <content type="html"><![CDATA[<p>第一次在win上使用WinSCP来链接linux，遇到的一个小问题：<br>提示我：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">服务器拒绝了sftp连接，但它监听ftp连接.想要用ftp协议来代替sftp</div></pre></td></tr></table></figure></p>
<p>然后我将链接方式改成了ftp。又爆出另一个蛋疼的提示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">由于目标机器积极拒绝，无法连接</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>两个提示都百度了一下，果然有很多答案，说是要关防火墙啊，改连接方式啊等等。满世界的答案都成功的避开了我遇到的问题。<br>    纠结了很久，我考虑到WinSCP连接linux的原理是什么呢？再仔细想想自己哪一步可能漏掉？？<br>    突然想起，这是自己新装的一个虚拟机，还没配SSH，难道是这个原因？？<br>果断的配上了SSH，发现果然OK了。果断的记录一下，如果也有新手跟我遇到同样的问题，就能有所帮助。<br>关于SSH可以参考另一篇文章：<a href="http://www.jianshu.com/writer#/notebooks/4873723/notes/4574585" target="_blank" rel="external">SSH原理和运用</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一次在win上使用WinSCP来链接linux，遇到的一个小问题：&lt;br&gt;提示我：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;服务器拒绝了sftp连接，但它监听ftp连接.想要用ftp协议来代替sftp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后我将链接方式改成了ftp。又爆出另一个蛋疼的提示：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;由于目标机器积极拒绝，无法连接&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="tools" scheme="http://blog.fbi.st/categories/tools/"/>
    
    
      <category term="Linux" scheme="http://blog.fbi.st/tags/Linux/"/>
    
      <category term="工具" scheme="http://blog.fbi.st/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch非权威指南目录</title>
    <link href="http://blog.fbi.st/2017/05/20/elasticsearch%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%9B%AE%E5%BD%95/"/>
    <id>http://blog.fbi.st/2017/05/20/elasticsearch学习笔记目录/</id>
    <published>2017-05-20T12:07:31.000Z</published>
    <updated>2017-06-25T10:20:55.570Z</updated>
    
    <content type="html"><![CDATA[<p>#<a href="http://www.jianshu.com/p/844892bd0dff" target="_blank" rel="external">写在开始的话</a></p>
<p>#<a href="http://www.jianshu.com/p/e8ee319a238d" target="_blank" rel="external">一、elasticsearch简介</a></p>
<p>##<a href="http://www.jianshu.com/p/4c56a271c5b8" target="_blank" rel="external">1、ES一些名词的解释</a></p>
<p>#二、elasticsearch及各种组件的安装</p>
<p>#三、es索引存储</p>
<p>#四、搜索查询</p>
<p>#五、集群管理</p>
<p>#六、其他</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#&lt;a href=&quot;http://www.jianshu.com/p/844892bd0dff&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;写在开始的话&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#&lt;a href=&quot;http://www.jianshu.com/p/e8ee
    
    </summary>
    
      <category term="Elasticsearch非权威指南" scheme="http://blog.fbi.st/categories/Elasticsearch%E9%9D%9E%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.fbi.st/tags/Elasticsearch/"/>
    
  </entry>
  
</feed>
